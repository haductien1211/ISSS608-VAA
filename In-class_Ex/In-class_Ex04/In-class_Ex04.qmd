---
title: "In-class Exercise 4"
author: "Ha Duc Tien"
date: "May 4, 2024"
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  warning: false
  freeze: true
---

# 1. Installing and loading packages usign `pacman`

```{r}
pacman::p_load(tidyverse, ggstatsplot)

```

# 2. Loading the data

```{r}
exam <- read_csv("data/Exam_data.csv")
set.seed(1234)
```

# 3. ggstatsplot

## 3.1 Histogram

### 3.1.1 Histogram with Parametric method 

```{r}
p <- gghistostats(data = exam, 
             x = ENGLISH, 
             type = "p", 
             test.value = 60,
             bin.args = list(color ="black", 
                             fill = "lightblue", 
                             alpha = 0.7),
             normal.curve = FALSE, 
             normal.curve.args = list(linewidth = 2),
             xlab = "English Scores")
p
```

```{r}
extract_stats(p)
```
### 3.1.2 Histogram with Non-parametric method 

```{r}
p1 <- gghistostats(data = exam, 
             x = ENGLISH, 
             type = "np", 
             test.value = 60,
             bin.args = list(color ="black", 
                             fill = "lightblue", 
                             alpha = 0.7),
             normal.curve = FALSE, 
             normal.curve.args = list(linewidth = 2),
             xlab = "English Scores")
p1
```

```{r}
extract_stats(p1)
```

### 3.1.3 Histogram with Robust method

```{r}
p2 <- gghistostats(data = exam, 
             x = ENGLISH, 
             type = "robust", 
             test.value = 60,
             bin.args = list(color ="black", 
                             fill = "lightblue", 
                             alpha = 0.7),
             normal.curve = FALSE, 
             normal.curve.args = list(linewidth = 2),
             xlab = "English Scores")
p2
```

### 3.1.4 Histogram with Bayes method

```{r}
p3 <- gghistostats(data = exam, 
             x = ENGLISH, 
             type = "bayes", 
             test.value = 60,
             bin.args = list(color ="black", 
                             fill = "lightblue", 
                             alpha = 0.7),
             normal.curve = TRUE, 
             normal.curve.args = list(linewidth = 1, 
                                      color = "red"),
             xlab = "English Scores")
p3
```


## 3.2 ggdotplotstats()

```{r}
ggdotplotstats(data = exam,
               x = ENGLISH,
               y = CLASS,
               title = "",
               xlab = "")
```

## 3.3 ggwithinstats()

```{r}
exam_new <- exam %>%
            pivot_longer(cols = ENGLISH:SCIENCE,
                         names_to = "SUBJECT",
                         values_to = "SCORES")

ggwithinstats(data = filter(exam_new, 
                            SUBJECT %in% c("MATHS", "SCIENCE"), 
                            CLASS %in% c("3A")),
              x = SUBJECT,
              y = SCORES,
              type = "p")

```

## 3.4 ggscatterstats()

```{r}
ggscatterstats(data = exam,
               x = MATHS,
               y = ENGLISH,
               marginal = TRUE,
               label.var = ID,
               label.expression = ENGLISH > 90 & MATHS > 90)
```