{
  "hash": "71020aa344a8e0fc44aba08e2ebd4882",
  "result": {
    "markdown": "---\ntitle: \"In-class Exercise 6\"\nauthor: \"Ha Duc Tien\"\ndate: \"May 18, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n# 1. Part 1\n\n# 1.1 Loading R Packages for data processing\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(stringi, stringr, tidyr, tibble, rvest, corporaexplorer, readr)\n```\n:::\n\n\n## 1.2. Loading and processing the data\n\nThis below is based on https://kgjerde.github.io/corporaexplorer/articles/bible.html King James Bible exploration guide\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbible <- readr::read_lines(\"http://www.gutenberg.org/cache/epub/10/pg10.txt\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Collapsing into one string.\nbible <- paste(bible, collapse = \"\\n\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Identifying the beginning and end of the Bible / stripping PJ metadata\n # (technique borrowed from https://quanteda.io/articles/pkgdown/replication/digital-humanities.html).\nstart_v <- stri_locate_first_fixed(bible, \"The First Book of Moses: Called Genesis\")[1]\nend_v <- stri_locate_last_fixed(bible, \"Amen.\")[2]\nbible <- stri_sub(bible, start_v, end_v)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# In the file, every book in the bible is preceded by five newlines,\n  # which we use to split our string into a vector where each element is a book.\nbooks <- stri_split_regex(bible, \"\\n{5}\") %>%\n    unlist %>%\n    .[-40]  # Removing the heading \"The New Testament of the King James Bible\",\n              # which also was preceded by five newlines.\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Because of the structure of the text in the file:\n  # Replacing double or more newlines with two newlines, and a single newline with space.\nbooks <- str_replace_all(books, \"\\n{2,}\", \"NEW_PARAGRAPH\") %>%\n    str_replace_all(\"\\n\", \" \") %>%\n    str_replace_all(\"NEW_PARAGRAPH\", \"\\n\\n\")\nbooks <- books[3:68]  # The two first elements are not books\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Identifying new chapters within each book and split the text into chapters.\n# (The first characters in chapter 2 will e.g. be 2:1)\nchapters <- str_replace_all(books, \"(\\\\d+:1 )\", \"NEW_CHAPTER\\\\1\") %>%\n    stri_split_regex(\"NEW_CHAPTER\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Removing the chapter headings from the text (we want them as metadata).\nchapters <- lapply(chapters, function(x) x[-1])\n```\n:::\n\n\n\nMetadata\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# We are not quite happy with the long book titles in the King James Bible,\n  # so we retrieve shorter versions from esv.org which will take up less\n  # space in the corpus map plot.\nbook_titles <- read_html(\"https://www.esv.org/resources/esv-global-study-bible/list-of-abbreviations\") %>%\n  html_nodes(\"td:nth-child(1)\") %>%\n  html_text() %>%\n  .[13:78]  # Removing irrelevant elements after manual inspection.\n\n# We add a column indicating whether a book belongs to the Old or New Testament,\n#   knowing that they contain respectively 39 and 27 books.\ntestament <- c(rep(\"Old\", 39), rep(\"New\", 27))\n```\n:::\n\n\n\nCreating data frame with text and metadata\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data frame with one book as one row.\nbible_df <- tibble::tibble(Text = chapters,\n                           Book = book_titles,\n                           Testament = testament)\n\n# We want each chapter to be one row, but keep the metadata (book and which testament).\nbible_df <- tidyr::unnest(bible_df, Text)\n```\n:::\n\n\ncorporaexplorer\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# As this is a corpus which is not organised by date,\n  # we set `date_based_corpus` to `FALSE`.\n# Because we want to organise our exploration around the books in the Bible,\n  # we pass `\"Book\"` to the `grouping_variable` argument.\n# We specify which metadata columns we want to be displayed in the\n  # \"Document information\" tab, using the `columns_doc_info` argument.\nKJB <- prepare_data(dataset = bible_df,\n                    date_based_corpus = FALSE,\n                    grouping_variable = \"Book\",\n                    columns_doc_info = c(\"Testament\", \"Book\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nexplore(KJB)\n```\n\n::: {.cell-output-display}\n`<div style=\"width: 100% ; height: 400px ; text-align: center; box-sizing: border-box; -moz-box-sizing: border-box; -webkit-box-sizing: border-box;\" class=\"muted well\">Shiny applications not supported in static R Markdown documents</div>`{=html}\n:::\n:::\n\n\n# Part 2\n\n## 2.1 Loading packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(jsonlite, tidygraph, ggraph, visNetwork, graphlayouts,\n               ggforce, skimr, tidytext, tidyverse)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_data <- fromJSON(\"data/MC3.json\")\n```\n:::\n\n\nEdge\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_edges <- as_tibble(mc3_data$links) %>%\n  distinct() %>%\n  mutate(source = as.character(source),\n         target = as.character(target),\n         type = as.character(type)) %>%\n  group_by(source, target, type) %>%\n  summarise(weights = n()) %>%\n  filter(source != target) %>%\n  ungroup()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_nodes <- as_tibble(mc3_data$nodes) %>%\n  mutate(country = as.character(country),\n         id = as.character(id),\n         product_services = as.character(product_services),\n         revenue_omu = as.numeric(as.character(revenue_omu)),\n         type = as.character(type)) %>%\n  select(id, country, type, revenue_omu, product_services)\n```\n:::\n\n\n### creating mc3_nodes1\n\n\n::: {.cell}\n\n```{.r .cell-code}\nid1 <- mc3_edges %>%\n  select(source) %>%\n  rename(id = source)\n\nid2 <- mc3_edges %>%\n  select(target) %>%\n  rename(id = target)\n\nmc3_nodes1 <- rbind(id1, id2) %>%\n  distinct() %>%\n  left_join(mc3_nodes,\n            unmatched = \"drop\")\n```\n:::\n\n\n### Graph Model\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_graph <- tbl_graph(nodes = mc3_nodes1,\n                       edges = mc3_edges,\n                       directed = FALSE) %>%\n  mutate(betweenness_centrality = centrality_betweenness(),\n         closeness_centrality = centrality_closeness())\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_graph %>%\n  filter(betweenness_centrality >= 200000) %>%\n  ggraph(layout = \"fr\") +\n  geom_edge_link(aes(alpha = 0.5)) +\n  geom_node_point(aes(size = betweenness_centrality,\n                      colors = \"lightblue\",\n                      alpha = 0.5)) +\n  scale_size_continuous(range = c(1, 10)) +\n  theme_graph()\n```\n\n::: {.cell-output-display}\n![](In-Class_Ex06_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "In-Class_Ex06_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}