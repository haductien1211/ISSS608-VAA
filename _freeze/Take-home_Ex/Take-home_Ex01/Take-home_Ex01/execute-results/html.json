{
  "hash": "867d83b513fe4688a9929c1192115aa5",
  "result": {
    "markdown": "---\ntitle: \"Take-home Exercise 1\"\nauthor: \"Ha Duc Tien\"\ndate: \"April 17, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n# 1. Loading the needed libraries\n\nFor this take-home exercise 1, I will be using some of the libraries below:\n\ntidyverse patchwork ggrepel ggthemes hrbrthemes\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse, clock) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfirst_quarter <- read_csv(\"data/ResidentialTransaction20240308160536.csv\")\n\nlist_of_files <- list.files(path = \"data\",\n                            recursive = TRUE,\n                            pattern = \"\\\\.csv$\",\n                            full.names = TRUE)\n\nRealis <- read_csv(list_of_files)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n##Realis <- Realis %>%\n##  parse_date_time(`Sale Date`, \"%B %d %Y\")\n\nRealis <- Realis %>% \n  mutate(`Sale Date FORMAT` = format(as.Date((parse_date_time(`Sale Date`, \n        orders = c(\"%d %b %Y\")))), \"%b %Y\"))\n\n##write.csv(Realis, \"data/\\\\Realis.csv\", row.names=FALSE)\ncolSums(is.na(Realis))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n               Project Name        Transacted Price ($) \n                          0                           0 \n                Area (SQFT)          Unit Price ($ PSF) \n                          0                           0 \n                  Sale Date                     Address \n                          0                           0 \n               Type of Sale                Type of Area \n                          0                           0 \n                 Area (SQM)          Unit Price ($ PSM) \n                          0                           0 \n              Nett Price($)               Property Type \n                          0                           0 \n            Number of Units                      Tenure \n                          0                           0 \n            Completion Date Purchaser Address Indicator \n                          0                           0 \n                Postal Code             Postal District \n                          0                           0 \n              Postal Sector             Planning Region \n                          0                           0 \n              Planning Area            Sale Date FORMAT \n                          0                           0 \n```\n:::\n\n```{.r .cell-code}\nRealis\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 26,806 × 22\n   `Project Name`      `Transacted Price ($)` `Area (SQFT)` `Unit Price ($ PSF)`\n   <chr>                                <dbl>         <dbl>                <dbl>\n 1 THE REEF AT KING'S…                2317000          883.                 2625\n 2 URBAN TREASURES                    1823500          883.                 2066\n 3 NORTH GAIA                         1421112         1076.                 1320\n 4 NORTH GAIA                         1258112         1033.                 1218\n 5 PARC BOTANNIA                      1280000          872.                 1468\n 6 NANYANG PARK                       5870000         3323.                 1767\n 7 PALMS @ SIXTH AVEN…                4950000         4521.                 1095\n 8 N.A.                               3260000         1555.                 2096\n 9 WHISTLER GRAND                      850000          441.                 1926\n10 NORTHOAKS                          1268000         1604.                  791\n# ℹ 26,796 more rows\n# ℹ 18 more variables: `Sale Date` <chr>, Address <chr>, `Type of Sale` <chr>,\n#   `Type of Area` <chr>, `Area (SQM)` <dbl>, `Unit Price ($ PSM)` <dbl>,\n#   `Nett Price($)` <chr>, `Property Type` <chr>, `Number of Units` <dbl>,\n#   Tenure <chr>, `Completion Date` <chr>, `Purchaser Address Indicator` <chr>,\n#   `Postal Code` <chr>, `Postal District` <chr>, `Postal Sector` <chr>,\n#   `Planning Region` <chr>, `Planning Area` <chr>, `Sale Date FORMAT` <chr>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = Realis, aes(x = `Unit Price ($ PSF)`)) +\n  geom_histogram(bins = 20, color = \"grey10\", fill = \"lightblue\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data = Realis, aes(x = `Property Type`)) + \n  geom_bar(color = \"grey10\", fill = \"lightblue\") + \n  theme(axis.text=element_text(size=6))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data = Realis, aes(x = `Planning Region`)) +\n  geom_bar(color = \"grey10\", fill = \"lightblue\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-4-3.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data = Realis, aes(x = `Planning Region`, y = `Unit Price ($ PSF)`)) +\n  geom_boxplot(color = \"grey10\", fill = \"lightblue\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-4-4.png){width=672}\n:::\n\n```{.r .cell-code}\n# Realis$`Sale Date FORMAT` <- factor(Realis$`Sale Date FORMAT` , \n#                                     levels = Realis$`Sale Date FORMAT`)\n\nggplot(data = Realis, aes(x = `Sale Date FORMAT`)) +\n  geom_bar(color = \"grey10\", fill = \"lightblue\", inherit.aes = TRUE) +\n  scale_x_discrete(name =\"Sale Month\", \n                   limits = c(\"Jan 2023\", \"Feb 2023\", \"Mar 2023\", \n                      \"Apr 2023\",\"May 2023\",\"Jun 2023\", \n                      \"Jul 2023\", \"Aug 2023\", \"Sep 2023\",\n                      \"Oct 2023\", \"Nov 2023\", \"Dec 2023\", \n                      \"Jan 2024\", \"Feb 2024\", \"Mar 2024\"))+\n  theme(axis.text=element_text(size=6))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-4-5.png){width=672}\n:::\n:::",
    "supporting": [
      "Take-home_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}