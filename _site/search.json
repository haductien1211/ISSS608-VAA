[
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "Assuming the role of a graphical editor of a median company, the purpose of this data visualization exercise is to prepare minimum two and maximum three data visualizations to reveal interesting insights on the private residential market and sub-markets of Singapore for the 1st quarter of 2024 and prior periods.\n\n\n\nFor this exercise and to accomplish the task, transaction data of REALIS will be used, which provides comprehensive and up-to-date statistics on the property market in Singapore.\nA complete set of the private residential property transaction data from 1st January 2023 to 31st March 2024"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#the-task",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#the-task",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "Assuming the role of a graphical editor of a median company, the purpose of this data visualization exercise is to prepare minimum two and maximum three data visualizations to reveal interesting insights on the private residential market and sub-markets of Singapore for the 1st quarter of 2024 and prior periods."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#the-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#the-data",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "For this exercise and to accomplish the task, transaction data of REALIS will be used, which provides comprehensive and up-to-date statistics on the property market in Singapore.\nA complete set of the private residential property transaction data from 1st January 2023 to 31st March 2024"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#loading-the-packages",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#loading-the-packages",
    "title": "Take-home Exercise 1",
    "section": "2.1 Loading the packages",
    "text": "2.1 Loading the packages\nFor this Take-home exercise 1, I am planning to use some of the libraries below:\ntidyverse: The tidyverse is an opinionated collection of R packages designed for data science.\npatchwork: a package to make it simple to combine separate ggplots into the same graphic\nggrepel: a package to provide geoms for ggplot2 to repel overlapping text labels\nggthemes: a package to provide some extra themes, geoms, and scales for ‘ggplot2’.\nggridges: a package for Ridgeline plots, which are partially overlapping line plots that create the impression of a mountain range.\nggdist: an R package that provides a flexible set of ggplot2 geoms and stats designed especially for visualizing distributions and uncertainty which will assist with ggridges package\n\nThe Code:\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse, ggridges, ggdist)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#importing-data-and-preparation",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#importing-data-and-preparation",
    "title": "Take-home Exercise 1",
    "section": "2.2 Importing data and preparation",
    "text": "2.2 Importing data and preparation\nSince the data is a list of csv files containing quarterly data from the first quarter of 2023 to the first quarter of 2024, for the purpose of the study I will be creating and using both the full data set (Realis) and a smaller data set containing only data for the first quarter of 2024 (first_quarter_2024) from ResidentialTransaction20240414220633.csv file\n\nThe Code:\n\nfirst_quarter_2024 &lt;- read_csv(\"data/ResidentialTransaction20240414220633.csv\")\n\nlist_of_files &lt;- list.files(path = \"data\",\n                            recursive = TRUE,\n                            pattern = \"\\\\.csv$\",\n                            full.names = TRUE)\nRealis &lt;- read_csv(list_of_files)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-overview",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-overview",
    "title": "Take-home Exercise 1",
    "section": "3.1 Data overview",
    "text": "3.1 Data overview\n\nThe Code:\n\nglimpse(Realis)\n\nRows: 26,806\nColumns: 21\n$ `Project Name`                &lt;chr&gt; \"THE REEF AT KING'S DOCK\", \"URBAN TREASU…\n$ `Transacted Price ($)`        &lt;dbl&gt; 2317000, 1823500, 1421112, 1258112, 1280…\n$ `Area (SQFT)`                 &lt;dbl&gt; 882.65, 882.65, 1076.40, 1033.34, 871.88…\n$ `Unit Price ($ PSF)`          &lt;dbl&gt; 2625, 2066, 1320, 1218, 1468, 1767, 1095…\n$ `Sale Date`                   &lt;chr&gt; \"01 Jan 2023\", \"02 Jan 2023\", \"02 Jan 20…\n$ Address                       &lt;chr&gt; \"12 HARBOURFRONT AVENUE #05-32\", \"205 JA…\n$ `Type of Sale`                &lt;chr&gt; \"New Sale\", \"New Sale\", \"New Sale\", \"New…\n$ `Type of Area`                &lt;chr&gt; \"Strata\", \"Strata\", \"Strata\", \"Strata\", …\n$ `Area (SQM)`                  &lt;dbl&gt; 82.0, 82.0, 100.0, 96.0, 81.0, 308.7, 42…\n$ `Unit Price ($ PSM)`          &lt;dbl&gt; 28256, 22238, 14211, 13105, 15802, 19015…\n$ `Nett Price($)`               &lt;chr&gt; \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", …\n$ `Property Type`               &lt;chr&gt; \"Condominium\", \"Condominium\", \"Executive…\n$ `Number of Units`             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Tenure                        &lt;chr&gt; \"99 yrs from 12/01/2021\", \"Freehold\", \"9…\n$ `Completion Date`             &lt;chr&gt; \"Uncompleted\", \"Uncompleted\", \"Uncomplet…\n$ `Purchaser Address Indicator` &lt;chr&gt; \"HDB\", \"Private\", \"HDB\", \"HDB\", \"HDB\", \"…\n$ `Postal Code`                 &lt;chr&gt; \"097996\", \"419535\", \"269343\", \"269294\", …\n$ `Postal District`             &lt;chr&gt; \"04\", \"14\", \"27\", \"27\", \"28\", \"19\", \"10\"…\n$ `Postal Sector`               &lt;chr&gt; \"09\", \"41\", \"26\", \"26\", \"79\", \"54\", \"27\"…\n$ `Planning Region`             &lt;chr&gt; \"Central Region\", \"East Region\", \"North …\n$ `Planning Area`               &lt;chr&gt; \"Bukit Merah\", \"Bedok\", \"Yishun\", \"Yishu…\n\nsummary(Realis)\n\n Project Name       Transacted Price ($)  Area (SQFT)       Unit Price ($ PSF)\n Length:26806       Min.   :   440000    Min.   :   322.9   Min.   : 138      \n Class :character   1st Qu.:  1280000    1st Qu.:   721.2   1st Qu.:1384      \n Mode  :character   Median :  1660000    Median :   990.3   Median :1762      \n                    Mean   :  2143286    Mean   :  1191.6   Mean   :1852      \n                    3rd Qu.:  2320000    3rd Qu.:  1302.4   3rd Qu.:2260      \n                    Max.   :392180000    Max.   :144883.4   Max.   :5756      \n  Sale Date           Address          Type of Sale       Type of Area      \n Length:26806       Length:26806       Length:26806       Length:26806      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n   Area (SQM)      Unit Price ($ PSM) Nett Price($)      Property Type     \n Min.   :   30.0   Min.   : 1484      Length:26806       Length:26806      \n 1st Qu.:   67.0   1st Qu.:14893      Class :character   Class :character  \n Median :   92.0   Median :18966      Mode  :character   Mode  :character  \n Mean   :  110.7   Mean   :19930                                           \n 3rd Qu.:  121.0   3rd Qu.:24327                                           \n Max.   :13460.0   Max.   :61962                                           \n Number of Units     Tenure          Completion Date   \n Min.   : 1.000   Length:26806       Length:26806      \n 1st Qu.: 1.000   Class :character   Class :character  \n Median : 1.000   Mode  :character   Mode  :character  \n Mean   : 1.005                                        \n 3rd Qu.: 1.000                                        \n Max.   :60.000                                        \n Purchaser Address Indicator Postal Code        Postal District   \n Length:26806                Length:26806       Length:26806      \n Class :character            Class :character   Class :character  \n Mode  :character            Mode  :character   Mode  :character  \n                                                                  \n                                                                  \n                                                                  \n Postal Sector      Planning Region    Planning Area     \n Length:26806       Length:26806       Length:26806      \n Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character  \n                                                         \n                                                         \n                                                         \n\ncolSums(is.na(Realis))\n\n               Project Name        Transacted Price ($) \n                          0                           0 \n                Area (SQFT)          Unit Price ($ PSF) \n                          0                           0 \n                  Sale Date                     Address \n                          0                           0 \n               Type of Sale                Type of Area \n                          0                           0 \n                 Area (SQM)          Unit Price ($ PSM) \n                          0                           0 \n              Nett Price($)               Property Type \n                          0                           0 \n            Number of Units                      Tenure \n                          0                           0 \n            Completion Date Purchaser Address Indicator \n                          0                           0 \n                Postal Code             Postal District \n                          0                           0 \n              Postal Sector             Planning Region \n                          0                           0 \n              Planning Area \n                          0 \n\n\nA quick look at the data shown that there are 21 different columns, there are categorical variables that could be of interest such as Project Name, Property Type, Planning Region, Planning Area as well as continuous variables such as Transacted Price ($), Area (SQFT), Area (SQM), Unit Price ($ PSF), Unit Price ($ PSM), Number of Units.\nThere is also no missing data which is good and mean that we do not have to perform data wrangling for missing data.\nFor the purpose of this study, I would be focusing on these variable below:\nProperty Type, Planning Region, Transacted Price ($), Area (SQM), Unit Price ($ PSM), Sale Date"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-wrangling",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-wrangling",
    "title": "Take-home Exercise 1",
    "section": "3.2 Data wrangling",
    "text": "3.2 Data wrangling\nInterestingly, Sale Date is supposed to be a kind of continuous variable or discrete variable; however, it is in ‘character’ type instead of ‘datetime’ or rather it is just in ‘string’, even though, the format seems correct. In addition, I also want to use a sort of monthly data visualization and the time seems to be in Date format.\nTherefore some data transformation would need to be performed to create 2 new column called Sale Date asDate which is properly in Datetime format, and Sale Month, which show the month Sale happened instead of date.\nTo do this I would be using parse_date_time part of the lubridate in tidyverse package to correctly pasring the ‘string’ into datetime format then use as.Date to finally turn it into proper ‘datetime’, this would also create the Sale Date asDate column.\nAfter above steps, I will be using format to create the Sale Month colum\n\nThe Code:\n\nRealis &lt;- Realis %&gt;% \n  mutate(`Sale Date asDate` = as.Date((parse_date_time(`Sale Date`, \n        orders = c(\"%d %b %Y\")))))\nRealis &lt;- Realis %&gt;% \n  mutate(`Sale Month` = format(as.Date((parse_date_time(`Sale Date`, \n        orders = c(\"%d %b %Y\")))), \"%b %Y\"))\n\n\n\nfirst_quarter_2024 &lt;- first_quarter_2024 %&gt;% \n  mutate(`Sale Date asDate` = as.Date((parse_date_time(`Sale Date`, \n        orders = c(\"%d %b %Y\")))))\n\nfirst_quarter_2024 &lt;- first_quarter_2024 %&gt;% \n  mutate(`Sale Month` = format(as.Date((parse_date_time(`Sale Date`, \n        orders = c(\"%d %b %Y\")))), \"%b %Y\"))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-visualization-for-the-first-quarter-of-2024",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-visualization-for-the-first-quarter-of-2024",
    "title": "Take-home Exercise 1",
    "section": "4.1 Data visualization for the first quarter of 2024",
    "text": "4.1 Data visualization for the first quarter of 2024\n\n4.1.1 Main part\nThis part of the first quarter of 2024 data visualization contain 3 plots:\n\nOn the left is the bar plot counting the number of sales breaking down by different Planning Region\nOn the right is a ridgeline plot showing the Unit Price ($ PSM) distribution breakdown by 4 quartiles by different Planning Region\nBottom plot is box plot showing a further breakdown from the ridgeline plot going into different Property Type\n\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\nplot1 &lt;-ggplot(data = first_quarter_2024, aes(x = `Planning Region`)) +\n    geom_bar(color = \"grey10\", aes(fill = `Property Type`)) +\n    ggtitle(\"Sales by Property Type by Planning Region\") +\n    theme_economist() +\n    theme(axis.text=element_text(size = 20), \n          axis.title = element_text(size = 25), \n          title = element_text(size = 25, margin = margin(b = 15)), \n          axis.title.y = element_text(margin = margin(r = 15)),\n          axis.title.x = element_text(margin = margin(t = 15)))\n\nplot2 &lt;- ggplot(data = first_quarter_2024, aes(x = `Planning Region`, y = `Unit Price ($ PSM)`)) +\n    geom_boxplot(aes(color=`Property Type`)) + \n    theme(axis.text=element_text(size=12)) +\n    ggtitle(\"Distribution of Unit Price ($ PSM) by Planning Region by Property Type\")+\n    theme_economist() +\n    theme(axis.text=element_text(size = 20), \n          axis.title = element_text(size = 25), \n          title = element_text(size = 25, margin = margin(b = 15)), \n          axis.title.y = element_text(margin = margin(r = 15)),\n          axis.title.x = element_text(margin = margin(t = 15)))\n\nplot3 &lt;- ggplot(data = first_quarter_2024, \n       aes(y = `Planning Region`, x = `Unit Price ($ PSM)`, \n            fill = factor(after_stat(quantile)))) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_economist()+\n  ggtitle(\"Distribution of Unit Price ($ PSM) by Planning Region\")+\n  theme(axis.text=element_text(size = 20), \n        axis.title = element_text(size = 25), \n        title = element_text(size = 25, margin = margin(b = 15)), \n        axis.title.y = element_text(margin = margin(r = 15)),\n        axis.title.x = element_text(margin = margin(t = 15)))\n\n(plot1 + plot3 ) / plot2\n\n\n\n\n\n\n\n\n\n\nObservations and insights\n\n\n\nFrom the data visualizations above, here are my observations and insights on date from first quarter 2024:\n\nThe Central region seems to have the highest number of sales followed by the North East region with main Property Type being Apartment and Condominium. North Region has the lowest number of sales, but their main Property Type sale is Executive Condominium; similarly West Region main Property Type sale is also Executive Condominium\nThe Unit Price ($ PSM) seems to be on average higher in the Central and North East region with some of the highest being in Central region\nFurther breakdown of Unit Price ($ PSM) by Property Type show an interesting trend of Apartment being more expensive than other types in Central and North East region. Meanwhile, in North and West region where their main Property Type sale is Executive Condominium the Unit Price ($ PSM) is lowest.\n\n\n\n\n\n4.1.1 Sub part\nFor this sub part, I am showing a scatterplot of Area (SQM) vs Transacted Price ($), with a fit line using Generalized Linear Models, each data point is label under their Planning Region and different colors is for different Property Type.\nThe purpose of this plot is to see if there is a relationship between property size and its price as well as to see which property type from which region is likely to be of bigger size and more expensive overall.\nHowever, since the proper size and its transacted price could be quite high (144883.4 SQM for size and 392,180,000 SGD for price), for this study, I have limited the data to be within 30 - 600 SQM for size and 450,000 - 10,000,000 SGD for transacted price\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\nggplot(data = first_quarter_2024, aes(y = `Area (SQM)`,\n                                      x = `Transacted Price ($)`)) +\n  geom_point()+\n  geom_smooth(method = glm, linewidth = 1) +\n  coord_cartesian(ylim = c(30,600), xlim=c(450000,10000000)) +\n  geom_label_repel(aes(label = `Planning Region`, color = `Property Type`), \n                   fontface = \"bold\", max.overlaps = 12) +\n  ggtitle(\"Size (SQM) vs Transacted Price ($) in the first quarter of 2024\") +\n  theme_economist()+\n  theme(axis.text=element_text(size = 15), \n        axis.title = element_text(size = 20), \n        title = element_text(size = 20, margin = margin(b = 15)), \n        axis.title.y = element_text(margin = margin(r = 15)),\n        axis.title.x = element_text(margin = margin(t = 15)))\n\n\n\n\n\n\n\n\n\n\nObservations and insights\n\n\n\nFrom the data visualizations above, here are my observations\n\nThere seems to be a clear linear correlation between Area (SQM) and Transacted Price ($) based on the Generalized Linear Models fit line.\nCentral region shows a high concentration of high value properties with some of the most expensive properties and these properties are mainly Condominium and Executive Condominium.\nDetached House seems to be generally larger than other types of property."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#time-series-data-visualization-from-2023-to-first-quarter-of-2024",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#time-series-data-visualization-from-2023-to-first-quarter-of-2024",
    "title": "Take-home Exercise 1",
    "section": "4.2 Time series data visualization from 2023 to first quarter of 2024",
    "text": "4.2 Time series data visualization from 2023 to first quarter of 2024\nThis part of the data visualization contain 3 plots:\n\nOn the top is a bar plot, counting the number of monthly sales breaking down by different Property Type\nIn the middle is a box plot showing the monthly distribution of Unit Price ($ PSM) by different Property Type\nBottom plot is a line plot as further breakdown from the middle box plot, showing the movement of Mean Unit Price ($ PSM) by different Property Type\n\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\nplot4 &lt;- ggplot(data = Realis, aes(x = `Sale Month`)) +\n    geom_bar(color = \"grey10\", aes(fill = `Property Type`)) +\n    scale_x_discrete(name =\"Sale Month\", \n                     limits = c(\"Jan 2023\", \"Feb 2023\", \"Mar 2023\", \n                        \"Apr 2023\",\"May 2023\",\"Jun 2023\", \n                        \"Jul 2023\", \"Aug 2023\", \"Sep 2023\",\n                        \"Oct 2023\", \"Nov 2023\", \"Dec 2023\", \n                        \"Jan 2024\", \"Feb 2024\", \"Mar 2024\")) +\n  \n    ggtitle(\"Monthly number of sales by Property Type\") +\n    theme_economist() +\n    theme(axis.text=element_text(size = 15), \n          axis.title = element_text(size = 18)\n          , title = element_text(size = 20), axis)\n\nplot5 &lt;- ggplot(data = Realis, aes(x = `Sale Month`, y = `Unit Price ($ PSM)`)) +\n    scale_x_discrete(name =\"Sale Month\",\n                   limits = c(\"Jan 2023\", \"Feb 2023\", \"Mar 2023\",\n                      \"Apr 2023\",\"May 2023\",\"Jun 2023\",\n                      \"Jul 2023\", \"Aug 2023\", \"Sep 2023\",\n                      \"Oct 2023\", \"Nov 2023\", \"Dec 2023\",\n                      \"Jan 2024\", \"Feb 2024\", \"Mar 2024\")) +\n    \n    geom_boxplot(aes(color=`Property Type`)) + \n    theme(axis.text=element_text(size=12)) +\n    ggtitle(\"Monthly changes in Unit Price ($PSM)\")+\n    theme_economist() +\n    theme(axis.text=element_text(size = 15), \n          axis.title = element_text(size = 18)\n          , title = element_text(size = 20))\n\nby_month &lt;- Realis %&gt;%\n  group_by(`Property Type`, `Sale Month`) %&gt;%\n  summarise(`Mean Unit Price ($ PSM)` = mean(`Unit Price ($ PSM)`))\n\nby_month$`Sale Month` &lt;- factor(by_month$`Sale Month`, \n                                levels = c(\"Jan 2023\", \"Feb 2023\", \"Mar 2023\",\n                                            \"Apr 2023\",\"May 2023\",\"Jun 2023\",\n                                            \"Jul 2023\", \"Aug 2023\", \"Sep 2023\",\n                                            \"Oct 2023\", \"Nov 2023\", \"Dec 2023\",\n                                            \"Jan 2024\", \"Feb 2024\", \"Mar 2024\"))\n\nby_month &lt;- by_month[order(by_month$`Sale Month`),]\n\n\nplot6 &lt;- ggplot(data = by_month, aes(x = `Sale Month`, y = `Mean Unit Price ($ PSM)`, \n                            group = `Property Type`)) +\n    geom_path(aes(color = `Property Type`), size = 1) +\n    geom_point(size = 1.5) +\n    theme(axis.text=element_text(size=12))+\n    ggtitle(\"Monthly changes in Mean Unit Price ($PSM) 2023 to first quarter 2024\")+\n    theme_economist() +\n    theme(axis.text=element_text(size = 15), \n        axis.title = element_text(size = 18)\n        , title = element_text(size = 20))\n\n(plot4 / plot5 / plot6)\n\n\n\n\n\n\n\n\n\n\nObservations and insights\n\n\n\nFrom the data visualizations above, here are my observations:\n\nThe main property types for sales from Jan 2023 to Mar 2024 seem to be Apartment and Condominium followed by Executive Condominium. The highest sales amount for this period occurred in July 2023\nThe overall Unit Price ($ PSM) for different property type during the period seems stable except for Detached House which has a dip in July 2023 and Executive Condominium with overall downward trend and a dip in Jun 2023. For Apartment type, there seems to be an overall downward trend for Mean Unit Price ($ PSM) but seems to be picking up again\nSurprisingly, contrary to what being observed in the scatterplot where some of the most expensive properties are Executive Condominium, their overall Mean Unit Price ($ PSM) has been the lowest and quite stable, albeit there is a small increase starting 2024"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-class Exercise 4",
    "section": "",
    "text": "pacman::p_load(tidyverse, ggstatsplot)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#histogram",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#histogram",
    "title": "In-class Exercise 4",
    "section": "3.1 Histogram",
    "text": "3.1 Histogram\n\n3.1.1 Histogram with Parametric method\n\np &lt;- gghistostats(data = exam, \n             x = ENGLISH, \n             type = \"p\", \n             test.value = 60,\n             bin.args = list(color =\"black\", \n                             fill = \"lightblue\", \n                             alpha = 0.7),\n             normal.curve = FALSE, \n             normal.curve.args = list(linewidth = 2),\n             xlab = \"English Scores\")\np\n\n\n\n\n\nextract_stats(p)\n\n$subtitle_data\n# A tibble: 1 × 15\n     mu statistic df.error  p.value method            alternative effectsize\n  &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt;             &lt;chr&gt;       &lt;chr&gt;     \n1    60      8.77      321 1.04e-16 One Sample t-test two.sided   Hedges' g \n  estimate conf.level conf.low conf.high conf.method conf.distribution n.obs\n     &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;             &lt;int&gt;\n1    0.488       0.95    0.372     0.603 ncp         t                   322\n  expression\n  &lt;list&gt;    \n1 &lt;language&gt;\n\n$caption_data\n# A tibble: 1 × 16\n  term       effectsize      estimate conf.level conf.low conf.high    pd\n  &lt;chr&gt;      &lt;chr&gt;              &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;\n1 Difference Bayesian t-test     7.16       0.95     5.54      8.75     1\n  prior.distribution prior.location prior.scale    bf10 method         \n  &lt;chr&gt;                       &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;          \n1 cauchy                          0       0.707 4.54e13 Bayesian t-test\n  conf.method log_e_bf10 n.obs expression\n  &lt;chr&gt;            &lt;dbl&gt; &lt;int&gt; &lt;list&gt;    \n1 ETI               31.4   322 &lt;language&gt;\n\n$pairwise_comparisons_data\nNULL\n\n$descriptive_data\nNULL\n\n$one_sample_data\nNULL\n\n$tidy_data\nNULL\n\n$glance_data\nNULL\n\n\n\n\n3.1.2 Histogram with Non-parametric method\n\np1 &lt;- gghistostats(data = exam, \n             x = ENGLISH, \n             type = \"np\", \n             test.value = 60,\n             bin.args = list(color =\"black\", \n                             fill = \"lightblue\", \n                             alpha = 0.7),\n             normal.curve = FALSE, \n             normal.curve.args = list(linewidth = 2),\n             xlab = \"English Scores\")\np1\n\n\n\n\n\nextract_stats(p1)\n\n$subtitle_data\n# A tibble: 1 × 12\n  statistic  p.value method                    alternative effectsize       \n      &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt;                     &lt;chr&gt;       &lt;chr&gt;            \n1     38743 3.43e-16 Wilcoxon signed rank test two.sided   r (rank biserial)\n  estimate conf.level conf.low conf.high conf.method n.obs expression\n     &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt; &lt;chr&gt;       &lt;int&gt; &lt;list&gt;    \n1    0.528       0.95    0.430     0.613 normal        322 &lt;language&gt;\n\n$caption_data\nNULL\n\n$pairwise_comparisons_data\nNULL\n\n$descriptive_data\nNULL\n\n$one_sample_data\nNULL\n\n$tidy_data\nNULL\n\n$glance_data\nNULL\n\n\n\n\n3.1.3 Histogram with Robust method\n\np2 &lt;- gghistostats(data = exam, \n             x = ENGLISH, \n             type = \"robust\", \n             test.value = 60,\n             bin.args = list(color =\"black\", \n                             fill = \"lightblue\", \n                             alpha = 0.7),\n             normal.curve = FALSE, \n             normal.curve.args = list(linewidth = 2),\n             xlab = \"English Scores\")\np2\n\n\n\n\n\n\n3.1.4 Histogram with Bayes method\n\np3 &lt;- gghistostats(data = exam, \n             x = ENGLISH, \n             type = \"bayes\", \n             test.value = 60,\n             bin.args = list(color =\"black\", \n                             fill = \"lightblue\", \n                             alpha = 0.7),\n             normal.curve = TRUE, \n             normal.curve.args = list(linewidth = 1, \n                                      color = \"red\"),\n             xlab = \"English Scores\")\np3"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#ggdotplotstats",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#ggdotplotstats",
    "title": "In-class Exercise 4",
    "section": "3.2 ggdotplotstats()",
    "text": "3.2 ggdotplotstats()\n\nggdotplotstats(data = exam,\n               x = ENGLISH,\n               y = CLASS,\n               title = \"\",\n               xlab = \"\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#ggwithinstats",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#ggwithinstats",
    "title": "In-class Exercise 4",
    "section": "3.3 ggwithinstats()",
    "text": "3.3 ggwithinstats()\n\nexam_new &lt;- exam %&gt;%\n            pivot_longer(cols = ENGLISH:SCIENCE,\n                         names_to = \"SUBJECT\",\n                         values_to = \"SCORES\")\n\nggwithinstats(data = filter(exam_new, \n                            SUBJECT %in% c(\"MATHS\", \"SCIENCE\"), \n                            CLASS %in% c(\"3A\")),\n              x = SUBJECT,\n              y = SCORES,\n              type = \"p\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#ggscatterstats",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#ggscatterstats",
    "title": "In-class Exercise 4",
    "section": "3.4 ggscatterstats()",
    "text": "3.4 ggscatterstats()\n\nggscatterstats(data = exam,\n               x = MATHS,\n               y = ENGLISH,\n               marginal = TRUE,\n               label.var = ID,\n               label.expression = ENGLISH &gt; 90 & MATHS &gt; 90)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "title": "In-class Exercise 1",
    "section": "",
    "text": "In the code chunk below, p_load() of pacman is used to load tidyverse family of packages.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#loading-r-packages",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#loading-r-packages",
    "title": "In-class Exercise 1",
    "section": "",
    "text": "In the code chunk below, p_load() of pacman is used to load tidyverse family of packages.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#importing-the-data",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#importing-the-data",
    "title": "In-class Exercise 1",
    "section": "Importing the data",
    "text": "Importing the data\n\nrealis &lt;- read_csv(\"data/realis2019.csv\")\n\n\nrealis.csv &lt;- read.csv(\"data/realis2019.csv\")\n\n\nggplot(data = realis,\n       aes(x = `Unit Price ($ psm)`)) +\n  geom_histogram()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.2/Hands-on_Ex04.2.html",
    "href": "Hands-on_Ex/Hands-on_Ex04.2/Hands-on_Ex04.2.html",
    "title": "Hands-on Exercise 4.2 Visualising Uncertainty",
    "section": "",
    "text": "Visualising uncertainty is relatively new in statistical graphics. In this chapter, you will gain hands-on experience on creating statistical graphics for visualising uncertainty. By the end of this chapter you will be able:\n\nto plot statistics error bars by using ggplot2,\nto plot interactive error bars by combining ggplot2, plotly and DT,\nto create advanced by using ggdist, and\nto create hypothetical outcome plots (HOPs) by using ungeviz package.\n\n\n\nFor the purpose of this exercise, the following R packages will be used, they are:\n\ntidyverse, a family of R packages for data science process,\nplotly for creating interactive plot,\ngganimate for creating animation plot,\nDT for displaying interactive html table,\ncrosstalk for for implementing cross-widget interactions (currently, linked brushing and filtering)\nggdist for visualising distribution and uncertainty.\n\n\n\n\n\n\n\nInstall package\n\n\n\nthe code below is used to install ungeviz from github\ndevtools::install_github(“wilkelab/ungeviz”)\n\n\n\npacman::p_load(ungeviz, plotly, crosstalk,\n               DT, ggdist, ggridges,\n               colorspace, gganimate, tidyverse)\n\n\n\n\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.2/Hands-on_Ex04.2.html#install-and-launching-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex04.2/Hands-on_Ex04.2.html#install-and-launching-r-packages",
    "title": "Hands-on Exercise 4.2 Visualising Uncertainty",
    "section": "",
    "text": "For the purpose of this exercise, the following R packages will be used, they are:\n\ntidyverse, a family of R packages for data science process,\nplotly for creating interactive plot,\ngganimate for creating animation plot,\nDT for displaying interactive html table,\ncrosstalk for for implementing cross-widget interactions (currently, linked brushing and filtering)\nggdist for visualising distribution and uncertainty.\n\n\n\n\n\n\n\nInstall package\n\n\n\nthe code below is used to install ungeviz from github\ndevtools::install_github(“wilkelab/ungeviz”)\n\n\n\npacman::p_load(ungeviz, plotly, crosstalk,\n               DT, ggdist, ggridges,\n               colorspace, gganimate, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.2/Hands-on_Ex04.2.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex04.2/Hands-on_Ex04.2.html#importing-the-data",
    "title": "Hands-on Exercise 4.2 Visualising Uncertainty",
    "section": "",
    "text": "exam &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.2/Hands-on_Ex04.2.html#the-table",
    "href": "Hands-on_Ex/Hands-on_Ex04.2/Hands-on_Ex04.2.html#the-table",
    "title": "Hands-on Exercise 4.2 Visualising Uncertainty",
    "section": "The table",
    "text": "The table\n\n\n\n\n\nRACE\nn\nmean\nsd\nse\n\n\n\n\nChinese\n193\n76.50777\n15.69040\n1.132357\n\n\nIndian\n12\n60.66667\n23.35237\n7.041005\n\n\nMalay\n108\n57.44444\n21.13478\n2.043177\n\n\nOthers\n9\n69.66667\n10.72381\n3.791438"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.2/Hands-on_Ex04.2.html#the-code",
    "href": "Hands-on_Ex/Hands-on_Ex04.2/Hands-on_Ex04.2.html#the-code",
    "title": "Hands-on Exercise 4.2 Visualising Uncertainty",
    "section": "The code",
    "text": "The code\n\nknitr::kable(head(my_sum), format = 'html')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.2/Hands-on_Ex04.2.html#plotting-standard-error-bars-of-point-estimates",
    "href": "Hands-on_Ex/Hands-on_Ex04.2/Hands-on_Ex04.2.html#plotting-standard-error-bars-of-point-estimates",
    "title": "Hands-on Exercise 4.2 Visualising Uncertainty",
    "section": "2.1 Plotting standard error bars of point estimates",
    "text": "2.1 Plotting standard error bars of point estimates\nNow we are ready to plot the standard error bars of mean maths score by race as shown below."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.2/Hands-on_Ex04.2.html#the-plot",
    "href": "Hands-on_Ex/Hands-on_Ex04.2/Hands-on_Ex04.2.html#the-plot",
    "title": "Hands-on Exercise 4.2 Visualising Uncertainty",
    "section": "The Plot",
    "text": "The Plot"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.2/Hands-on_Ex04.2.html#the-code-1",
    "href": "Hands-on_Ex/Hands-on_Ex04.2/Hands-on_Ex04.2.html#the-code-1",
    "title": "Hands-on Exercise 4.2 Visualising Uncertainty",
    "section": "The Code",
    "text": "The Code\n\nggplot(data = my_sum) +\n  geom_errorbar(aes(x = RACE, ymin = mean - se, ymax = mean + se),\n                width = 0.2, color = \"black\", alpha = 0.9, size = 0.5) +\n  geom_point(aes(x= RACE, y = mean), \n             stat = \"identity\", color = \"red\", alpha = 1, size = 1.5) +\n  ggtitle(\"Standard error of mean MATHS score by RACE\")\n\n\n\n\n\n\n\nThings about the code chunk above\n\n\n\n\nThe error bars are computed by using the formula mean+/-se.\nFor geom_point(), it is important to indicate stat=“identity”."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.2/Hands-on_Ex04.2.html#plotting-confidence-interval-of-point-estimates",
    "href": "Hands-on_Ex/Hands-on_Ex04.2/Hands-on_Ex04.2.html#plotting-confidence-interval-of-point-estimates",
    "title": "Hands-on Exercise 4.2 Visualising Uncertainty",
    "section": "2.2 Plotting confidence interval of point estimates",
    "text": "2.2 Plotting confidence interval of point estimates\nInstead of plotting the standard error bar of point estimates, we can also plot the confidence intervals of mean maths score by race."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.2/Hands-on_Ex04.2.html#the-plot-1",
    "href": "Hands-on_Ex/Hands-on_Ex04.2/Hands-on_Ex04.2.html#the-plot-1",
    "title": "Hands-on Exercise 4.2 Visualising Uncertainty",
    "section": "The Plot",
    "text": "The Plot"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.2/Hands-on_Ex04.2.html#the-code-2",
    "href": "Hands-on_Ex/Hands-on_Ex04.2/Hands-on_Ex04.2.html#the-code-2",
    "title": "Hands-on Exercise 4.2 Visualising Uncertainty",
    "section": "The Code",
    "text": "The Code\n\nggplot(data = my_sum) +\n  geom_errorbar(aes(x = reorder(RACE, -mean), \n                    ymin = mean-1.96*se, ymax = mean+1.96*se),\n                width = 0.2, color = \"black\", alpha = 0.9, size = 0.5) +\n  geom_point(aes(x = RACE, y = mean),\n             stat = \"identity\", color = \"red\", alpha = 1, size = 1.5) +\n  labs(x = \"MATHS score\", \n       title = \"95% confidence interval of mean MATHS score by RACE\")\n\n\n\n\n\n\n\nThings about the code chunk above\n\n\n\n\nThe confidence intervals are computed by using the formula mean+/-1.96*se.\nThe error bars is sorted by using the average maths scores.\nlabs() argument of ggplot2 is used to change the x-axis label."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.2/Hands-on_Ex04.2.html#visualizing-the-uncertainty-of-point-estimates-with-interactive-error-bars",
    "href": "Hands-on_Ex/Hands-on_Ex04.2/Hands-on_Ex04.2.html#visualizing-the-uncertainty-of-point-estimates-with-interactive-error-bars",
    "title": "Hands-on Exercise 4.2 Visualising Uncertainty",
    "section": "2.3 Visualizing the uncertainty of point estimates with interactive error bars",
    "text": "2.3 Visualizing the uncertainty of point estimates with interactive error bars\nIn this section, we will explore how to plot interactive error bars for the 99% confidence interval of mean maths score by race as shown in the figure below."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.2/Hands-on_Ex04.2.html#the-plot-2",
    "href": "Hands-on_Ex/Hands-on_Ex04.2/Hands-on_Ex04.2.html#the-plot-2",
    "title": "Hands-on Exercise 4.2 Visualising Uncertainty",
    "section": "The Plot",
    "text": "The Plot"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.2/Hands-on_Ex04.2.html#the-code-3",
    "href": "Hands-on_Ex/Hands-on_Ex04.2/Hands-on_Ex04.2.html#the-code-3",
    "title": "Hands-on Exercise 4.2 Visualising Uncertainty",
    "section": "The Code",
    "text": "The Code\n\nshared_df = SharedData$new(my_sum)\n\nbscols(widths = c(4,8),\n       ggplotly((ggplot(shared_df) +\n        geom_errorbar(aes(x=reorder(RACE, -mean), ymin=mean-2.58*se, \n                          ymax=mean+2.58*se), \n                     width=0.2, colour=\"black\", alpha=0.9, linewidth=0.5) +\n        geom_point(aes(x=RACE, y=mean, \n                     text = paste(\"Race:\", `RACE`, \"&lt;br&gt;N:\", `n`,\n                                  \"&lt;br&gt;Avg. Scores:\", round(mean, digits = 2),\n                                  \"&lt;br&gt;95% CI:[\", \n                                  round((mean-2.58*se), digits = 2), \",\",\n                                  round((mean+2.58*se), digits = 2),\"]\")),\n                     stat=\"identity\", color=\"red\",alpha=1, size = 1.5,) + \n        xlab(\"Race\") + \n        ylab(\"Average Scores\") + \n        theme_minimal() + \n        theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1)) +\n        ggtitle(\"99% Confidence interval of average /&lt;br&gt;maths scores by race\")), \n                tooltip = \"text\"), \n        DT::datatable(shared_df, rownames = FALSE, class=\"compact\", width=\"100%\", \n                     options = list(pageLength = 10, scrollX=T), \n                     colnames = c(\"No. of pupils\", \"Avg Scores\", \"Std Dev\",\n                                  \"Std Error\")) %&gt;%\n            formatRound(columns=c('mean', 'sd', 'se'), digits=2))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.2/Hands-on_Ex04.2.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04.2/Hands-on_Ex04.2.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods",
    "title": "Hands-on Exercise 4.2 Visualising Uncertainty",
    "section": "3.1 Visualizing the uncertainty of point estimates: ggdist methods",
    "text": "3.1 Visualizing the uncertainty of point estimates: ggdist methods\nIn the code chunk below, stat_pointinterval() of ggdist is used to build a visual for displaying distribution of maths scores by race.\n\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval() +\n  labs(title = \"Visualising confidence intervals of mean MATHS score\",\n       subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\nIN the code chunk below the following arguments are used:\n\n.width = 0.95\n.point = median\n.interval = qi\n\n\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(.width = 0.95, point_interval = \"median_qi\") +\n  labs(title = \"Visualising confidence intervals of mean MATHS score\",\n       subtitle = \"Median Point + Multiple-interval plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.2/Hands-on_Ex04.2.html#changing-interval",
    "href": "Hands-on_Ex/Hands-on_Ex04.2/Hands-on_Ex04.2.html#changing-interval",
    "title": "Hands-on Exercise 4.2 Visualising Uncertainty",
    "section": "3.2 Changing interval",
    "text": "3.2 Changing interval\nMakeover the plot on previous part by showing 95% and 99% confidence intervals.\n\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(.width = c(0.95, 0.99), point_interval = \"mean_qi\", \n                     show.legend = FALSE) +\n  labs(title = \"Visualising confidence intervals of mean MATHS score\",\n       subtitle = \"Mean Point + Multiple-interval plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.2/Hands-on_Ex04.2.html#showing-gradient-using-stat_gradientinterval",
    "href": "Hands-on_Ex/Hands-on_Ex04.2/Hands-on_Ex04.2.html#showing-gradient-using-stat_gradientinterval",
    "title": "Hands-on Exercise 4.2 Visualising Uncertainty",
    "section": "3.3 Showing gradient using stat_gradientinterval()",
    "text": "3.3 Showing gradient using stat_gradientinterval()\nThe code chunk below is showing gradient using color fill and stat_gradientinterval() of ggdist is used to build a visual for displaying distribution of maths scores by race.\n\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS)) +\n    stat_gradientinterval(.width = c(0.95, 0.99), point_interval = \"mean_qi\",\n                          fill = \"skyblue\", fill_type = \"segments\",\n                          show.legend = TRUE) +\n    labs(title = \"Visualising confidence intervals of mean MATHS score\",\n        subtitle = \"Gradient + Multiple-interval plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.2/Hands-on_Ex03.2.html",
    "href": "Hands-on_Ex/Hands-on_Ex03.2/Hands-on_Ex03.2.html",
    "title": "Hands-on Exercise 3.2 Programming Animated Statistical Graphics with R",
    "section": "",
    "text": "The Code chunk below uses p_load() function of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)\n\n\n\n\nnfortunately, mutate_each_() was deprecated in dplyr 0.7.0. and funs() was deprecated in dplyr 0.8.0. In view of this, we will re-write the code by using mutate_at() as shown in the code chunk below.\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\", sheet=\"Data\") %&gt;%\n              mutate_at(col, as.factor) %&gt;%\n              mutate(Year = as.integer(Year))\n\nInstead of using mutate_at(), across() can be used to derive the same outputs.\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\", sheet=\"Data\") %&gt;%\n              mutate(across(col, as.factor)) %&gt;%\n              mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.2/Hands-on_Ex03.2.html#install-and-launching-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex03.2/Hands-on_Ex03.2.html#install-and-launching-r-packages",
    "title": "Hands-on Exercise 3.2 Programming Animated Statistical Graphics with R",
    "section": "",
    "text": "The Code chunk below uses p_load() function of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.2/Hands-on_Ex03.2.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex03.2/Hands-on_Ex03.2.html#importing-the-data",
    "title": "Hands-on Exercise 3.2 Programming Animated Statistical Graphics with R",
    "section": "",
    "text": "nfortunately, mutate_each_() was deprecated in dplyr 0.7.0. and funs() was deprecated in dplyr 0.8.0. In view of this, we will re-write the code by using mutate_at() as shown in the code chunk below.\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\", sheet=\"Data\") %&gt;%\n              mutate_at(col, as.factor) %&gt;%\n              mutate(Year = as.integer(Year))\n\nInstead of using mutate_at(), across() can be used to derive the same outputs.\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\", sheet=\"Data\") %&gt;%\n              mutate(across(col, as.factor)) %&gt;%\n              mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.2/Hands-on_Ex03.2.html#building-a-static-population-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03.2/Hands-on_Ex03.2.html#building-a-static-population-bubble-plot",
    "title": "Hands-on Exercise 3.2 Programming Animated Statistical Graphics with R",
    "section": "2.1 Building a static population bubble plot",
    "text": "2.1 Building a static population bubble plot\nIn the code chunk below, the basic ggplot2 functions are used to create a static bubble plot.\n\nggplot(globalPop, aes(x = Old, y = Young, size = Population, colour = Country)) +\n  geom_point(alpha = 0.7, show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', x = '% Aged', y = '% Young')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.2/Hands-on_Ex03.2.html#building-the-animated-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03.2/Hands-on_Ex03.2.html#building-the-animated-bubble-plot",
    "title": "Hands-on Exercise 3.2 Programming Animated Statistical Graphics with R",
    "section": "2.2 Building the animated bubble plot",
    "text": "2.2 Building the animated bubble plot\nIn the code chunk below,\n\ntransition_time() of gganimate is used to create transition through distinct states in time (i.e. Year).\nease_aes() is used to control easing of aesthetics. The default is linear. Other methods are: quadratic, cubic, quartic, quintic, sine, circular, exponential, elastic, back, and bounce.\n\n\nggplot(globalPop, aes(x = Old, y = Young, size = Population, colour = Country)) +\n  geom_point(alpha = 0.7, show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', x = '% Aged', y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.2/Hands-on_Ex03.2.html#building-an-animated-bubble-plot-ggplotly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03.2/Hands-on_Ex03.2.html#building-an-animated-bubble-plot-ggplotly-method",
    "title": "Hands-on Exercise 3.2 Programming Animated Statistical Graphics with R",
    "section": "3.1 Building an animated bubble plot: ggplotly() method",
    "text": "3.1 Building an animated bubble plot: ggplotly() method\nIn this sub-section, we will create an animated bubble plot by using ggplotly() method.\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, aes(x = Old, y = Young, \n                            size = Population, colour = Country, frame = Year)) +\n      geom_point(aes(size = Population, frame = Year), \n                 alpha = 0.7, show.legend = FALSE) +\n      scale_colour_manual(values = country_colors) +\n      scale_size(range = c(2, 12)) +\n      labs(x = '% Aged', y = '% Young')\n\nggplotly(gg)\n\n\n\n\nNotice that although show.legend = FALSE argument was used, the legend still appears on the plot. To overcome this problem, theme(legend.position='none') should be used as shown in the plot and code chunk below.\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, aes(x = Old, y = Young, \n                            size = Population, colour = Country, frame = Year)) +\n      geom_point(aes(size = Population), \n                 alpha = 0.7, show.legend = FALSE) +\n      scale_colour_manual(values = country_colors) +\n      scale_size(range = c(2, 12)) +\n      labs(x = '% Aged', y = '% Young') +\n      theme(legend.position='none')\n\nggplotly(gg)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.2/Hands-on_Ex03.2.html#building-an-animated-bubble-plot-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03.2/Hands-on_Ex03.2.html#building-an-animated-bubble-plot-plot_ly-method",
    "title": "Hands-on Exercise 3.2 Programming Animated Statistical Graphics with R",
    "section": "3.2 Building an animated bubble plot: plot_ly() method",
    "text": "3.2 Building an animated bubble plot: plot_ly() method\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, y = ~Young, size = ~Population, color = ~Continent,\n          sizes = c(2, 100), frame = ~Year, text = ~Country, \n          hoverinfo = \"text\", type = 'scatter', mode = 'markers') %&gt;%\n  layout(showlegend = FALSE)\nbp"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2 Beyond ggplot2 Fundamentals",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-without-ggrepel",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-without-ggrepel",
    "title": "Hands-on Exercise 2 Beyond ggplot2 Fundamentals",
    "section": "3.1 Working without ggrepel",
    "text": "3.1 Working without ggrepel\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data = exam_data, aes(x = MATHS, y = ENGLISH)) +\n  geom_point() +\n  geom_smooth(method = lm, linewidth = 0.5) +\n  geom_label(aes(label = ID, colour = factor(RACE)), \n             hjust = 0.5, vjust = -0.5) +\n  coord_cartesian(xlim = c(0,100), ylim = c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel",
    "title": "Hands-on Exercise 2 Beyond ggplot2 Fundamentals",
    "section": "3.2 Working with ggrepel",
    "text": "3.2 Working with ggrepel\n\n3.2.1 Using geom_label_repel()\nSimply replace geom_label() by geom_label_repel()\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data = exam_data, aes(x = MATHS, y = ENGLISH)) +\n  geom_point() +\n  geom_smooth(method = lm, linewidth = 0.5) +\n  geom_label_repel(aes(label = ID, colour = factor(RACE)),\n                   max.overlaps = 20, fontface = \"bold\") +\n  coord_cartesian(xlim = c(0,100), ylim = c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n3.2.1 Using geom_text_repel()\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data = exam_data, aes(x = MATHS, y = SCIENCE)) +\n  geom_point() +\n  geom_smooth(method = lm, linewidth = 0.5) +\n  geom_text_repel(aes(label = ID, colour = factor(RACE)),\n                   max.overlaps = 20, fontface = \"bold\") +\n  coord_cartesian(xlim = c(0,100), ylim = c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggtheme-package",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggtheme-package",
    "title": "Hands-on Exercise 2 Beyond ggplot2 Fundamentals",
    "section": "4.1 Working with ggtheme package",
    "text": "4.1 Working with ggtheme package\nggthemes provides ‘ggplot2’ themes that replicate the look of plots by Edward Tufte, Stephen Few, Fivethirtyeight, The Economist, ‘Stata’, ‘Excel’, and The Wall Street Journal, among others.\n\n4.1.1 The economist theme\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data = exam_data, aes(x= MATHS))+\n  geom_histogram(bins = 20, boundary = 100, color = \"grey10\", fill = \"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n\n\n\n\n\n\n4.1.2 The WSJ theme\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data = exam_data, aes(x= ENGLISH))+\n  geom_histogram(bins = 20, boundary = 100, color = \"grey10\", fill = \"grey90\") +\n  ggtitle(\"Distribution of English scores\") +\n  theme_wsj(base_size = 8)\n\n\n\n\n\n\n4.1.3 The fivethirtyeight theme\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data = exam_data, aes(x= SCIENCE))+\n  geom_histogram(bins = 20, boundary = 100, color = \"grey10\", fill = \"grey90\") +\n  ggtitle(\"Distribution of Science scores\") +\n  theme_fivethirtyeight()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-hrbthems-package",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-hrbthems-package",
    "title": "Hands-on Exercise 2 Beyond ggplot2 Fundamentals",
    "section": "4.2 Working with hrbthems package",
    "text": "4.2 Working with hrbthems package\nhrbrthemes package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data = exam_data, aes(x = MATHS)) +\n  geom_histogram(bins = 20, boundary = 100, color = \"grey10\", fill = \"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n\n\n\n\nUsing the elements of hrbrthemes\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data = exam_data, aes(x = MATHS)) +\n  geom_histogram(bins = 20, boundary = 100, color = \"grey10\", fill = \"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18, base_size = 15, grid = \"Y\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-composite-graphics-patchwork-methods",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-composite-graphics-patchwork-methods",
    "title": "Hands-on Exercise 2 Beyond ggplot2 Fundamentals",
    "section": "5.1 Creating Composite Graphics: patchwork methods",
    "text": "5.1 Creating Composite Graphics: patchwork methods\nPatchwork package has a very simple syntax where we can create layouts:\n\nTwo-Column Layout using the Plus Sign +.\nParenthesis () to create a subplot group.\nTwo-Row Layout using the Division Sign /"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs",
    "title": "Hands-on Exercise 2 Beyond ggplot2 Fundamentals",
    "section": "5.2 Combining two ggplot2 graphs",
    "text": "5.2 Combining two ggplot2 graphs\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\np1 + p2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-three-ggplot2-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-three-ggplot2-graphs",
    "title": "Hands-on Exercise 2 Beyond ggplot2 Fundamentals",
    "section": "5.3 Combining three ggplot2 graphs",
    "text": "5.3 Combining three ggplot2 graphs\n\n“|” operator to stack two ggplot2 graphs,\n“/” operator to place the plots beside each other,\n“()” operator the define the sequence of the plotting.\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n((p1 / p2) | p4) &\n  theme(plot.title = element_text(size = 8))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-with-tag",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-with-tag",
    "title": "Hands-on Exercise 2 Beyond ggplot2 Fundamentals",
    "section": "5.4 Creating a composite figure with tag",
    "text": "5.4 Creating a composite figure with tag\nUse patchwork for auto-tagging capabilities\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n((p1 / p2) | p4) +\n  plot_annotation(tag_levels = '1') &\n  theme(plot.title = element_text(size = 8))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-figure-with-insert",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-figure-with-insert",
    "title": "Hands-on Exercise 2 Beyond ggplot2 Fundamentals",
    "section": "5.5 Creating figure with insert",
    "text": "5.5 Creating figure with insert\nWith inset_element() of patchwork, we can place one or several plots or graphic elements freely on top or below another plot.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\np4 + inset_element(p2, left = 0.02, right = 0.5, top = 1, bottom = 0.7)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "title": "Hands-on Exercise 2 Beyond ggplot2 Fundamentals",
    "section": "5.6 Creating a composite figure by using patchwork and ggtheme",
    "text": "5.6 Creating a composite figure by using patchwork and ggtheme\nFigure below is created by combining patchwork and theme_economist() of ggthemes package\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\npatchwork &lt;- (p1 / p2) | p4\npatchwork & theme_economist() & \n  theme(plot.title = element_text(size = 8))"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\nThis website is for showcasing works related to ISSS608 Visual Analytics and Application for homework and exercises."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1 A Layered Grammar of Graphics: ggplot2 methods",
    "section": "",
    "text": "The Code chunk below uses p_load() function of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launching-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launching-r-packages",
    "title": "Hands-on Exercise 1 A Layered Grammar of Graphics: ggplot2 methods",
    "section": "",
    "text": "The Code chunk below uses p_load() function of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "title": "Hands-on Exercise 1 A Layered Grammar of Graphics: ggplot2 methods",
    "section": "",
    "text": "exam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-aes",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-aes",
    "title": "Hands-on Exercise 1 A Layered Grammar of Graphics: ggplot2 methods",
    "section": "5.1 Modifying a geometric object by changing aes()",
    "text": "5.1 Modifying a geometric object by changing aes()\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-geom",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-geom",
    "title": "Hands-on Exercise 1 A Layered Grammar of Graphics: ggplot2 methods",
    "section": "5.2 Modifying a geometric object by changing geom()",
    "text": "5.2 Modifying a geometric object by changing geom()\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#using-geom-density-to-plots-kernel-density-estimate",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#using-geom-density-to-plots-kernel-density-estimate",
    "title": "Hands-on Exercise 1 A Layered Grammar of Graphics: ggplot2 methods",
    "section": "5.3 Using geom-density() to plots kernel density estimate",
    "text": "5.3 Using geom-density() to plots kernel density estimate\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-simple-box-plot-using-notched-plot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-simple-box-plot-using-notched-plot",
    "title": "Hands-on Exercise 1 A Layered Grammar of Graphics: ggplot2 methods",
    "section": "6.1 Plotting a simple box plot using notched plot",
    "text": "6.1 Plotting a simple box plot using notched plot\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#combining-box-plot-and-scatterplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#combining-box-plot-and-scatterplot",
    "title": "Hands-on Exercise 1 A Layered Grammar of Graphics: ggplot2 methods",
    "section": "8.1 Combining box plot and scatterplot",
    "text": "8.1 Combining box plot and scatterplot\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             linewidth = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-stat_summary-method",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-stat_summary-method",
    "title": "Hands-on Exercise 1 A Layered Grammar of Graphics: ggplot2 methods",
    "section": "9.1 Working with stat - the stat_summary() method",
    "text": "9.1 Working with stat - the stat_summary() method\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun=\"mean\",         \n               colour =\"red\",        \n               size=4)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-geom-method",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-geom-method",
    "title": "Hands-on Exercise 1 A Layered Grammar of Graphics: ggplot2 methods",
    "section": "9.2 Working with stat - the geom() method",
    "text": "9.2 Working with stat - the geom() method\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun =\"mean\",           \n             colour =\"red\",          \n             size=4)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#adding-a-best-fit-curve-on-a-scatterplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#adding-a-best-fit-curve-on-a-scatterplot",
    "title": "Hands-on Exercise 1 A Layered Grammar of Graphics: ggplot2 methods",
    "section": "9.3 Adding a best fit curve on a scatterplot",
    "text": "9.3 Adding a best fit curve on a scatterplot\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(linewidth=0.5)\n\n\n\n\n\n9.3.1 Default smoothing method\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-facet_wrap",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-facet_wrap",
    "title": "Hands-on Exercise 1 A Layered Grammar of Graphics: ggplot2 methods",
    "section": "10.1 Working with facet_wrap()",
    "text": "10.1 Working with facet_wrap()\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_grid-function",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_grid-function",
    "title": "Hands-on Exercise 1 A Layered Grammar of Graphics: ggplot2 methods",
    "section": "10.2 facet_grid() function",
    "text": "10.2 facet_grid() function\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-coordinate",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-coordinate",
    "title": "Hands-on Exercise 1 A Layered Grammar of Graphics: ggplot2 methods",
    "section": "11.1 Working with Coordinate",
    "text": "11.1 Working with Coordinate\n\n11.1.1 Flips the horizontal bar chart into vertical bar chart by using coord_flip()\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#changing-the-y--and-x-axis-range",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#changing-the-y--and-x-axis-range",
    "title": "Hands-on Exercise 1 A Layered Grammar of Graphics: ggplot2 methods",
    "section": "11.2 Changing the y- and x-axis range",
    "text": "11.2 Changing the y- and x-axis range\n\n11.2.1 Fixed both the y-axis and x-axis range from 0-100.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-theme",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-theme",
    "title": "Hands-on Exercise 1 A Layered Grammar of Graphics: ggplot2 methods",
    "section": "12.1 Working with theme",
    "text": "12.1 Working with theme\n\n12.1.1 Plot a horizontal bar chart using theme_gray()\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()\n\n\n\n\n\n\n12.1.2 Plotted using theme_classic()\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()\n\n\n\n\n\n\n12.1.3 Plotted using theme_minimal()\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_bw()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.1/Hands-on_Ex03.1.html",
    "href": "Hands-on_Ex/Hands-on_Ex03.1/Hands-on_Ex03.1.html",
    "title": "Hands-on Exercise 3.1 Programming Interactive Data Visualisation with R",
    "section": "",
    "text": "In this hands-on exercise, I will be exploring interactive data visualisation by using functions provided by ggiraph and plotlyr packages\n\n\nThe Code chunk below uses p_load() function of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse) \n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.1/Hands-on_Ex03.1.html#install-and-launching-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex03.1/Hands-on_Ex03.1.html#install-and-launching-r-packages",
    "title": "Hands-on Exercise 3.1 Programming Interactive Data Visualisation with R",
    "section": "",
    "text": "The Code chunk below uses p_load() function of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.1/Hands-on_Ex03.1.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex03.1/Hands-on_Ex03.1.html#importing-the-data",
    "title": "Hands-on Exercise 3.1 Programming Interactive Data Visualisation with R",
    "section": "",
    "text": "exam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.1/Hands-on_Ex03.1.html#tooltip-effect-with-tooltip-aesthetic",
    "href": "Hands-on_Ex/Hands-on_Ex03.1/Hands-on_Ex03.1.html#tooltip-effect-with-tooltip-aesthetic",
    "title": "Hands-on Exercise 3.1 Programming Interactive Data Visualisation with R",
    "section": "2.1 Tooltip effect with tooltip aesthetic",
    "text": "2.1 Tooltip effect with tooltip aesthetic\n\nThe Code\n\np1 &lt;- ggplot(data=exam_data, aes(x = MATHS)) +\n      geom_dotplot_interactive(aes(tooltip = ID), stackgroups = TRUE, \n                               binwidth = 1, method = \"histodot\") +\n      scale_y_continuous(NULL,  breaks = NULL)\n\ngirafe(ggobj = p1, width_svg = 6,height_svg = 6*0.618)\n\nTwo steps are involved, first, an interactive version of ggplot2 geom (geom_dotplot_interactive()) will be used to create the basic graph. Then, girafe() will be used to generate an svg object to be displayed on an html page.\n###Interactivity\nBy hovering the mouse pointer on an data point of interest, the student’s ID will be displayed."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.1/Hands-on_Ex03.1.html#displaying-multiple-information-on-tooltip",
    "href": "Hands-on_Ex/Hands-on_Ex03.1/Hands-on_Ex03.1.html#displaying-multiple-information-on-tooltip",
    "title": "Hands-on Exercise 3.1 Programming Interactive Data Visualisation with R",
    "section": "2.2 Displaying multiple information on tooltip",
    "text": "2.2 Displaying multiple information on tooltip\nThe content of the tooltip can be customised by including a list object as shown in the code chunk below.\n\nThe Code\n\nexam_data$tooltip &lt;- c(paste0( \"Name = \", exam_data$ID, \n                               \"\\n Class = \", exam_data$CLASS)) \n\np2 &lt;- ggplot(data=exam_data, aes(x = ENGLISH)) +\n      geom_dotplot_interactive(aes(tooltip = exam_data$tooltip), stackgroups = TRUE, \n                               binwidth = 1, method = \"histodot\") +\n      scale_y_continuous(NULL,  breaks = NULL)\n\ngirafe(ggobj = p2, width_svg = 8,height_svg = 8*0.618)\n\n###Interactivity\nBy hovering the mouse pointer on an data point of interest, the student’s ID and Class will be displayed."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.1/Hands-on_Ex03.1.html#customising-tooltip-style",
    "href": "Hands-on_Ex/Hands-on_Ex03.1/Hands-on_Ex03.1.html#customising-tooltip-style",
    "title": "Hands-on Exercise 3.1 Programming Interactive Data Visualisation with R",
    "section": "2.3 Customising Tooltip style",
    "text": "2.3 Customising Tooltip style\nCode chunk below uses opts_tooltip() of ggiraph to customize tooltip rendering by add css declarations\n\nThe Code\n\ntooltip_css &lt;- \"background-color:white; font-style:bold; color:black;\"\n\np3 &lt;- ggplot(data=exam_data, aes(x = MATHS)) +\n  geom_dotplot_interactive(aes(tooltip = ID), stackgroups = TRUE,\n                           binwidth = 1, method = \"histodot\") +               \n  scale_y_continuous(NULL,breaks = NULL)\n\ngirafe(ggobj = p3, width_svg = 6, height_svg = 6*0.618, \n       options = list(opts_tooltip(css = tooltip_css)))\n\n\n\nInteractivity\nThe background colour of the tooltip is black and the font colour is white and bold."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.1/Hands-on_Ex03.1.html#creating-an-interactive-scatter-plot-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03.1/Hands-on_Ex03.1.html#creating-an-interactive-scatter-plot-plot_ly-method",
    "title": "Hands-on Exercise 3.1 Programming Interactive Data Visualisation with R",
    "section": "3.1 Creating an interactive scatter plot: plot_ly() method",
    "text": "3.1 Creating an interactive scatter plot: plot_ly() method\nThe tabset below shows an example a basic interactive plot created by using plot_ly().\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, x = ~MATHS, y = ~ENGLISH)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.1/Hands-on_Ex03.1.html#working-with-visual-variable-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03.1/Hands-on_Ex03.1.html#working-with-visual-variable-plot_ly-method",
    "title": "Hands-on Exercise 3.1 Programming Interactive Data Visualisation with R",
    "section": "3.2 Working with visual variable: plot_ly() method",
    "text": "3.2 Working with visual variable: plot_ly() method\nIn the code chunk below, color argument is mapped to a qualitative visual variable (i.e. RACE).\n\nThe plotThe Code\n\n\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, x = ~MATHS, y = ~ENGLISH, color = ~RACE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.1/Hands-on_Ex03.1.html#creating-an-interactive-scatter-plot-ggplotly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03.1/Hands-on_Ex03.1.html#creating-an-interactive-scatter-plot-ggplotly-method",
    "title": "Hands-on Exercise 3.1 Programming Interactive Data Visualisation with R",
    "section": "3.3 Creating an interactive scatter plot: ggplotly() method",
    "text": "3.3 Creating an interactive scatter plot: ggplotly() method\nThe code chunk below plots an interactive scatter plot by using ggplotly().\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\np8 &lt;- ggplot(data=exam_data, aes(x = MATHS, y = ENGLISH)) +\n      geom_point(size=1) +\n      coord_cartesian(xlim=c(0,100), ylim=c(0,100))\n\nggplotly(p8)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.1/Hands-on_Ex03.1.html#coordinated-multiple-views-with-plotly",
    "href": "Hands-on_Ex/Hands-on_Ex03.1/Hands-on_Ex03.1.html#coordinated-multiple-views-with-plotly",
    "title": "Hands-on Exercise 3.1 Programming Interactive Data Visualisation with R",
    "section": "3.4 Coordinated Multiple Views with plotly",
    "text": "3.4 Coordinated Multiple Views with plotly\nThe creation of a coordinated linked plot by using plotly involves three steps:\n\nhighlight_key() of plotly package is used as shared data.\n2 scatterplots will be created by using ggplot2 functions.\nsubplot() of plotly package is used to place them next to each other side-by-side.\n\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data)\np9 &lt;- ggplot(data=d, aes(x = MATHS, y = ENGLISH)) +\n        geom_point(size=1) +\n        coord_cartesian(xlim=c(0,100),ylim=c(0,100))\n\np10 &lt;- ggplot(data=d, aes(x = MATHS, y = SCIENCE)) +\n        geom_point(size=1) +\n        coord_cartesian(xlim=c(0,100), ylim=c(0,100))\n\nsubplot(ggplotly(p9),\n        ggplotly(p10))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.1/Hands-on_Ex03.1.html#interactive-data-table-dt-package",
    "href": "Hands-on_Ex/Hands-on_Ex03.1/Hands-on_Ex03.1.html#interactive-data-table-dt-package",
    "title": "Hands-on Exercise 3.1 Programming Interactive Data Visualisation with R",
    "section": "4.1 Interactive Data Table: DT package",
    "text": "4.1 Interactive Data Table: DT package\nA wrapper of the JavaScript Library DataTables\nData objects in R can be rendered as HTML tables using the JavaScript library ‘DataTables’ (typically via R Markdown or Shiny).\n\nDT::datatable(exam_data, class= \"display\", style = \"bootstrap5\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03.1/Hands-on_Ex03.1.html#linked-brushing-crosstalk-method",
    "href": "Hands-on_Ex/Hands-on_Ex03.1/Hands-on_Ex03.1.html#linked-brushing-crosstalk-method",
    "title": "Hands-on Exercise 3.1 Programming Interactive Data Visualisation with R",
    "section": "4.2 Linked brushing: crosstalk method",
    "text": "4.2 Linked brushing: crosstalk method\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data) \np11 &lt;- ggplot(d, aes(ENGLISH, MATHS)) + \n        geom_point(size=1) +\n        coord_cartesian(xlim=c(0,100), ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p11),\"plotly_selected\")  \n\ncrosstalk::bscols(gg, DT::datatable(d,class= \"display\", \n                                    style = \"bootstrap5\"), widths = 5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.1/Hands-on_Ex04.1.html",
    "href": "Hands-on_Ex/Hands-on_Ex04.1/Hands-on_Ex04.1.html",
    "title": "Hands-on Exercise 4.1 Visual Statistical Analysis",
    "section": "",
    "text": "In this hands-on exercise, we will gain hands-on experience on using:\n\nggstatsplot package to create visual graphics with rich statistical information,\nperformance package to visualise model diagnostics, and\nparameters package to visualise model parameters\n\nggstatsplot is an extension of ggplot2 package for creating graphics with details from statistical tests included in the information-rich plots themselves.\n\n\nThe Code chunk below uses p_load() function of pacman package to check if tidyverse and ggstatsplot packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(ggstatsplot, tidyverse) \n\n\n\n\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")\nhead(exam)\n\n# A tibble: 6 × 7\n  ID         CLASS GENDER RACE    ENGLISH MATHS SCIENCE\n  &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;\n1 Student321 3I    Male   Malay        21     9      15\n2 Student305 3I    Female Malay        24    22      16\n3 Student289 3H    Male   Chinese      26    16      16\n4 Student227 3F    Male   Chinese      27    77      31\n5 Student318 3I    Male   Malay        27    11      25\n6 Student306 3I    Female Malay        31    16      16\n\n\n\n\n\n\nIn the code chunk below, gghistostats() is used to to build an visual of one-sample test on English scores.\n\nset.seed(1234)\n\ngghistostats(data = exam, x = ENGLISH, type = \"bayes\", \n             test.value = 60, xlab = \"English scores\")\n\n\n\n\n\n\n\nIn the code chunk below, ggbetweenstats() is used to build a visual for two-sample mean test of Maths scores by gender.\n\nggbetweenstats(data = exam, x = GENDER, y = MATHS, \n               type = \"np\", messages = FALSE)\n\n\n\n\n\n\n\nIn the code chunk below, ggbetweenstats() is used to build a visual for One-way ANOVA test on English score by race\n\nggbetweenstats(data = exam, x = RACE, y = ENGLISH, type = \"parametric\",\n               mean.ci = TRUE, pairwise.comparisons = TRUE,\n               pairwise.display = \"s\", p.adjust.method = \"fdr\",\n               message = FALSE)\n\n\n\n\n\n\n\nIn the code chunk below, ggscatterstats() is used to build a visual for Significant Test of Correlation between Maths scores and English scores.\n\nggscatterstats(data = exam, x = MATHS, y = ENGLISH, marginal = FALSE)\n\n\n\n\n\n\n\nIn the code chunk below, the Maths scores is binned into a 4-class variable by using cut().\n\nexam1 &lt;- exam %&gt;%\n          mutate(MATHS_bins = cut(MATHS, breaks = c(0,60,75,85,100)))\n\nIn this code chunk below ggbarstats() is used to build a visual for Significant Test of Association\n\nggbarstats(data = exam1, x = MATHS_bins, y = GENDER)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.1/Hands-on_Ex04.1.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex04.1/Hands-on_Ex04.1.html#getting-started",
    "title": "Hands-on Exercise 4.1 Visual Statistical Analysis",
    "section": "",
    "text": "In this hands-on exercise, we will gain hands-on experience on using:\n\nggstatsplot package to create visual graphics with rich statistical information,\nperformance package to visualise model diagnostics, and\nparameters package to visualise model parameters\n\nggstatsplot is an extension of ggplot2 package for creating graphics with details from statistical tests included in the information-rich plots themselves.\n\n\nThe Code chunk below uses p_load() function of pacman package to check if tidyverse and ggstatsplot packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(ggstatsplot, tidyverse) \n\n\n\n\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")\nhead(exam)\n\n# A tibble: 6 × 7\n  ID         CLASS GENDER RACE    ENGLISH MATHS SCIENCE\n  &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;\n1 Student321 3I    Male   Malay        21     9      15\n2 Student305 3I    Female Malay        24    22      16\n3 Student289 3H    Male   Chinese      26    16      16\n4 Student227 3F    Male   Chinese      27    77      31\n5 Student318 3I    Male   Malay        27    11      25\n6 Student306 3I    Female Malay        31    16      16"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.1/Hands-on_Ex04.1.html#one-sample-test-gghistostats-method",
    "href": "Hands-on_Ex/Hands-on_Ex04.1/Hands-on_Ex04.1.html#one-sample-test-gghistostats-method",
    "title": "Hands-on Exercise 4.1 Visual Statistical Analysis",
    "section": "",
    "text": "In the code chunk below, gghistostats() is used to to build an visual of one-sample test on English scores.\n\nset.seed(1234)\n\ngghistostats(data = exam, x = ENGLISH, type = \"bayes\", \n             test.value = 60, xlab = \"English scores\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.1/Hands-on_Ex04.1.html#two-sample-mean-test-ggbetweenstats",
    "href": "Hands-on_Ex/Hands-on_Ex04.1/Hands-on_Ex04.1.html#two-sample-mean-test-ggbetweenstats",
    "title": "Hands-on Exercise 4.1 Visual Statistical Analysis",
    "section": "",
    "text": "In the code chunk below, ggbetweenstats() is used to build a visual for two-sample mean test of Maths scores by gender.\n\nggbetweenstats(data = exam, x = GENDER, y = MATHS, \n               type = \"np\", messages = FALSE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.1/Hands-on_Ex04.1.html#oneway-anova-test-ggbetweenstats-method",
    "href": "Hands-on_Ex/Hands-on_Ex04.1/Hands-on_Ex04.1.html#oneway-anova-test-ggbetweenstats-method",
    "title": "Hands-on Exercise 4.1 Visual Statistical Analysis",
    "section": "",
    "text": "In the code chunk below, ggbetweenstats() is used to build a visual for One-way ANOVA test on English score by race\n\nggbetweenstats(data = exam, x = RACE, y = ENGLISH, type = \"parametric\",\n               mean.ci = TRUE, pairwise.comparisons = TRUE,\n               pairwise.display = \"s\", p.adjust.method = \"fdr\",\n               message = FALSE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.1/Hands-on_Ex04.1.html#significant-test-of-correlation-ggscatterstats",
    "href": "Hands-on_Ex/Hands-on_Ex04.1/Hands-on_Ex04.1.html#significant-test-of-correlation-ggscatterstats",
    "title": "Hands-on Exercise 4.1 Visual Statistical Analysis",
    "section": "",
    "text": "In the code chunk below, ggscatterstats() is used to build a visual for Significant Test of Correlation between Maths scores and English scores.\n\nggscatterstats(data = exam, x = MATHS, y = ENGLISH, marginal = FALSE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.1/Hands-on_Ex04.1.html#significant-test-of-association-depedence-ggbarstats-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04.1/Hands-on_Ex04.1.html#significant-test-of-association-depedence-ggbarstats-methods",
    "title": "Hands-on Exercise 4.1 Visual Statistical Analysis",
    "section": "",
    "text": "In the code chunk below, the Maths scores is binned into a 4-class variable by using cut().\n\nexam1 &lt;- exam %&gt;%\n          mutate(MATHS_bins = cut(MATHS, breaks = c(0,60,75,85,100)))\n\nIn this code chunk below ggbarstats() is used to build a visual for Significant Test of Association\n\nggbarstats(data = exam1, x = MATHS_bins, y = GENDER)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.1/Hands-on_Ex04.1.html#getting-stated",
    "href": "Hands-on_Ex/Hands-on_Ex04.1/Hands-on_Ex04.1.html#getting-stated",
    "title": "Hands-on Exercise 4.1 Visual Statistical Analysis",
    "section": "2.0 Getting Stated",
    "text": "2.0 Getting Stated\n\n2.0.1 Installing and launching R packages\nThe Code chunk below uses p_load() function of pacman package to load the needed libaries.\n\npacman::p_load(readxl, performance, parameters, see)\n\npackage 'modelbased' successfully unpacked and MD5 sums checked\npackage 'see' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\tien_\\AppData\\Local\\Temp\\RtmpKKeTxk\\downloaded_packages\n\n\n\n\n2.0.2 Importing Excel file using readxl methods\nIn the code chunk below, read_xls() of readxl package is used to import the data worksheet of ToyotaCorolla.xls workbook into R.\n\ncar_resale &lt;- read_xls(\"data/ToyotaCorolla.xls\",\"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model    Price Age_08_04 Mfg_Month Mfg_Year     KM Quarterly_Tax Weight\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;         &lt;dbl&gt;  &lt;dbl&gt;\n 1    81 TOYOTA … 18950        25         8     2002  20019           100   1180\n 2     1 TOYOTA … 13500        23        10     2002  46986           210   1165\n 3     2 TOYOTA … 13750        23        10     2002  72937           210   1165\n 4     3  TOYOTA… 13950        24         9     2002  41711           210   1165\n 5     4 TOYOTA … 14950        26         7     2002  48000           210   1165\n 6     5 TOYOTA … 13750        30         3     2002  38500           210   1170\n 7     6 TOYOTA … 12950        32         1     2002  61000           210   1170\n 8     7  TOYOTA… 16900        27         6     2002  94612           210   1245\n 9     8 TOYOTA … 18600        30         3     2002  75889           210   1245\n10    44 TOYOTA … 16950        27         6     2002 110404           234   1255\n# ℹ 1,426 more rows\n# ℹ 29 more variables: Guarantee_Period &lt;dbl&gt;, HP_Bin &lt;chr&gt;, CC_bin &lt;chr&gt;,\n#   Doors &lt;dbl&gt;, Gears &lt;dbl&gt;, Cylinders &lt;dbl&gt;, Fuel_Type &lt;chr&gt;, Color &lt;chr&gt;,\n#   Met_Color &lt;dbl&gt;, Automatic &lt;dbl&gt;, Mfr_Guarantee &lt;dbl&gt;,\n#   BOVAG_Guarantee &lt;dbl&gt;, ABS &lt;dbl&gt;, Airbag_1 &lt;dbl&gt;, Airbag_2 &lt;dbl&gt;,\n#   Airco &lt;dbl&gt;, Automatic_airco &lt;dbl&gt;, Boardcomputer &lt;dbl&gt;, CD_Player &lt;dbl&gt;,\n#   Central_Lock &lt;dbl&gt;, Powered_Windows &lt;dbl&gt;, Power_Steering &lt;dbl&gt;, …\n\n\nThe output object car_resale is a tibble data frame"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.1/Hands-on_Ex04.1.html#multiple-regression-model-using-lm",
    "href": "Hands-on_Ex/Hands-on_Ex04.1/Hands-on_Ex04.1.html#multiple-regression-model-using-lm",
    "title": "Hands-on Exercise 4.1 Visual Statistical Analysis",
    "section": "2.1 Multiple Regression model using lm()",
    "text": "2.1 Multiple Regression model using lm()\nThe code chunk below is used to calibrate a multiple linear regression model by using lm() of Base Stats of R.\n\nmodel &lt;- lm(formula = Price ~ Age_08_04 + Mfg_Year + KM \n            + Weight + Guarantee_Period, data = car_resale)\n\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.1/Hands-on_Ex04.1.html#model-diagnostic-checking-for-multicolinearity",
    "href": "Hands-on_Ex/Hands-on_Ex04.1/Hands-on_Ex04.1.html#model-diagnostic-checking-for-multicolinearity",
    "title": "Hands-on Exercise 4.1 Visual Statistical Analysis",
    "section": "2.2 Model Diagnostic: checking for multicolinearity:",
    "text": "2.2 Model Diagnostic: checking for multicolinearity:\nIn the code chunk, check_collinearity() of performance package.\n\ncheck_collinearity(model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term  VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n               KM 1.46 [ 1.37,  1.57]         1.21      0.68     [0.64, 0.73]\n           Weight 1.41 [ 1.32,  1.51]         1.19      0.71     [0.66, 0.76]\n Guarantee_Period 1.04 [ 1.01,  1.17]         1.02      0.97     [0.86, 0.99]\n\nHigh Correlation\n\n      Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n  Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\n\n\ncheck_c &lt;- check_collinearity(model)\nplot(check_c)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.1/Hands-on_Ex04.1.html#model-diagnostic-checking-normality-assumption",
    "href": "Hands-on_Ex/Hands-on_Ex04.1/Hands-on_Ex04.1.html#model-diagnostic-checking-normality-assumption",
    "title": "Hands-on Exercise 4.1 Visual Statistical Analysis",
    "section": "2.3 Model Diagnostic: checking normality assumption",
    "text": "2.3 Model Diagnostic: checking normality assumption\nIn the code chunk, check_normality() of performance package\n\nmodel1 &lt;- lm(Price ~ Age_08_04 + KM + Weight + Guarantee_Period, \n             data = car_resale)\n\ncheck_n &lt;- check_normality(model1)\n\nplot(check_n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.1/Hands-on_Ex04.1.html#model-diagnostic-check-model-for-homogeneity-of-variances",
    "href": "Hands-on_Ex/Hands-on_Ex04.1/Hands-on_Ex04.1.html#model-diagnostic-check-model-for-homogeneity-of-variances",
    "title": "Hands-on Exercise 4.1 Visual Statistical Analysis",
    "section": "2.4 Model Diagnostic: Check model for homogeneity of variances",
    "text": "2.4 Model Diagnostic: Check model for homogeneity of variances\nIn the code chunk, check_heteroscedasticity() of performance package.\n\ncheck_h &lt;- check_heteroscedasticity(model1)\nplot(check_h)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.1/Hands-on_Ex04.1.html#model-diagnostic-complete-check",
    "href": "Hands-on_Ex/Hands-on_Ex04.1/Hands-on_Ex04.1.html#model-diagnostic-complete-check",
    "title": "Hands-on Exercise 4.1 Visual Statistical Analysis",
    "section": "2.5 Model Diagnostic: Complete check",
    "text": "2.5 Model Diagnostic: Complete check\n\ncheck_model(model1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.1/Hands-on_Ex04.1.html#visualising-regression-parameters-see-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04.1/Hands-on_Ex04.1.html#visualising-regression-parameters-see-methods",
    "title": "Hands-on Exercise 4.1 Visual Statistical Analysis",
    "section": "2.6 Visualising Regression Parameters: see methods",
    "text": "2.6 Visualising Regression Parameters: see methods\nIn the code chunk below, plot() of see package and parameters() of parameters package is used to visualise the parameters of a regression model.\n\nplot(parameters(model1))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.1/Hands-on_Ex04.1.html#visualising-regression-parameters-ggcoefstats-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04.1/Hands-on_Ex04.1.html#visualising-regression-parameters-ggcoefstats-methods",
    "title": "Hands-on Exercise 4.1 Visual Statistical Analysis",
    "section": "2.7 Visualising Regression Parameters: ggcoefstats() methods",
    "text": "2.7 Visualising Regression Parameters: ggcoefstats() methods\nIn the code chunk below, ggcoefstats() of ggstatsplot package to visualise the parameters of a regression model.\n\nggcoefstats(model1, output = \"plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.3/Hands-on_Ex04.3.html",
    "href": "Hands-on_Ex/Hands-on_Ex04.3/Hands-on_Ex04.3.html",
    "title": "Hands-on Exercise 4.3 Funnel Plots for Fair Comparisons",
    "section": "",
    "text": "Funnel plot is a specially designed data visualisation for conducting unbiased comparison between outlets, stores or business entities. By the end of this hands-on exercise, you will gain hands-on experience on:\n\nplotting funnel plots by using funnelPlotR package,\nplotting static funnel plot by using ggplot2 package, and\nplotting interactive funnel plot by using both plotly R and ggplot2 packages.\n\n\n\nIn this exercise, four R packages will be used. They are:\n\nreadr for importing csv into R.\nFunnelPlotR for creating funnel plot.\nggplot2 for creating funnel plot manually.\nknitr for building static html table.\nplotly for creating interactive funnel plot.\n\n\npacman::p_load(tidyverse, FunnelPlotR, plotly, knitr)\n\n\n\n\nIn this section, COVID-19_DKI_Jakarta will be used. The data was downloaded from Open Data Covid-19 Provinsi DKI Jakarta portal. For this hands-on exercise, we are going to compare the cumulative COVID-19 cases and death by sub-district (i.e. kelurahan) as at 31st July 2021, DKI Jakarta.\n\ncovid19 &lt;- read_csv(\"data/COVID-19_DKI_Jakarta.csv\") %&gt;%\n            mutate_if(is.character, as.factor)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.3/Hands-on_Ex04.3.html#install-and-launching-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex04.3/Hands-on_Ex04.3.html#install-and-launching-r-packages",
    "title": "Hands-on Exercise 4.3 Funnel Plots for Fair Comparisons",
    "section": "",
    "text": "In this exercise, four R packages will be used. They are:\n\nreadr for importing csv into R.\nFunnelPlotR for creating funnel plot.\nggplot2 for creating funnel plot manually.\nknitr for building static html table.\nplotly for creating interactive funnel plot.\n\n\npacman::p_load(tidyverse, FunnelPlotR, plotly, knitr)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.3/Hands-on_Ex04.3.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex04.3/Hands-on_Ex04.3.html#importing-the-data",
    "title": "Hands-on Exercise 4.3 Funnel Plots for Fair Comparisons",
    "section": "",
    "text": "In this section, COVID-19_DKI_Jakarta will be used. The data was downloaded from Open Data Covid-19 Provinsi DKI Jakarta portal. For this hands-on exercise, we are going to compare the cumulative COVID-19 cases and death by sub-district (i.e. kelurahan) as at 31st July 2021, DKI Jakarta.\n\ncovid19 &lt;- read_csv(\"data/COVID-19_DKI_Jakarta.csv\") %&gt;%\n            mutate_if(is.character, as.factor)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.3/Hands-on_Ex04.3.html#funnelplotr-methods-the-basic-plot",
    "href": "Hands-on_Ex/Hands-on_Ex04.3/Hands-on_Ex04.3.html#funnelplotr-methods-the-basic-plot",
    "title": "Hands-on Exercise 4.3 Funnel Plots for Fair Comparisons",
    "section": "2.1 FunnelPlotR methods: The basic plot",
    "text": "2.1 FunnelPlotR methods: The basic plot\nThe code chunk below plots a funnel plot.\n\nfunnel_plot(covid19, numerator = Positive, denominator = Death,\n            group = `Sub-district`)\n\n\n\n\nA funnel plot object with 267 points of which 0 are outliers. \nPlot is adjusted for overdispersion. \n\n\nThings to learn from the code chunk above.\n\ngroup in this function is different from the scatterplot. Here, it defines the level of the points to be plotted i.e. Sub-district, District or City. If Cityc is chosen, there are only six data points.\nBy default, data_type argument is “SR”.\nlimit: Plot limits, accepted values are: 95 or 99, corresponding to 95% or 99.8% quantiles of the distribution."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.3/Hands-on_Ex04.3.html#funnelplotr-methods-makeover-1",
    "href": "Hands-on_Ex/Hands-on_Ex04.3/Hands-on_Ex04.3.html#funnelplotr-methods-makeover-1",
    "title": "Hands-on Exercise 4.3 Funnel Plots for Fair Comparisons",
    "section": "2.2 FunnelPlotR methods: Makeover 1",
    "text": "2.2 FunnelPlotR methods: Makeover 1\n\nfunnel_plot(covid19, \n            numerator = Death, denominator = Positive, group = `Sub-district`,\n            data_type = \"PR\", xrange = c(0, 6500), yrange = c(0, 0.05))\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\nThings to learn from the code chunk above. + data_type argument is used to change from default “SR” to “PR” (i.e. proportions). + xrange and yrange are used to set the range of x-axis and y-axis"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.3/Hands-on_Ex04.3.html#funnelplotr-methods-makeover-2",
    "href": "Hands-on_Ex/Hands-on_Ex04.3/Hands-on_Ex04.3.html#funnelplotr-methods-makeover-2",
    "title": "Hands-on Exercise 4.3 Funnel Plots for Fair Comparisons",
    "section": "2.3 FunnelPlotR methods: Makeover 2",
    "text": "2.3 FunnelPlotR methods: Makeover 2\n\nfunnel_plot(covid19, \n            numerator = Death, denominator = Positive, group = `Sub-district`,\n            data_type = \"PR\", xrange = c(0, 6500), yrange = c(0, 0.05), label = NA,\n            title = \"Cumulative COVID-19 Fatality Rate by Cumulative Total Number of COVID-19 Positive Cases\",\n            x_label = \"Cumulative COVID-19 Positive Cases\",\n            y_label = \"Cumulative Fatality Rate\")\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\nThings to learn from the code chunk above.\n\nlabel = NA argument is to removed the default label outliers feature.\ntitle argument is used to add plot title.\nx_label and y_label arguments are used to add/edit x-axis and y-axis titles."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04.3/Hands-on_Ex04.3.html#funnel-plot-for-fair-visual-comparison-ggplot2-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04.3/Hands-on_Ex04.3.html#funnel-plot-for-fair-visual-comparison-ggplot2-methods",
    "title": "Hands-on Exercise 4.3 Funnel Plots for Fair Comparisons",
    "section": "2.4 Funnel Plot for Fair Visual Comparison: ggplot2 methods",
    "text": "2.4 Funnel Plot for Fair Visual Comparison: ggplot2 methods\nIn this section, we will gain hands-on experience on building funnel plots step-by-step by using ggplot2. It aims to enhance you working experience of ggplot2 to customise speciallised data visualisation like funnel plot.\n\n2.4.1 Computing the basic derived fields\n\ndf &lt;- covid19 %&gt;%\n  mutate(rate = Death / Positive) %&gt;%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %&gt;%\n  filter(rate &gt; 0)\n\nNext, the fit.mean is computed by using the code chunk below.\n\nfit.mean &lt;- weighted.mean(df$rate, 1/df$rate.se^2)\n\n\n\n2.4.2 Calculate lower and upper limits for 95% and 99.9% CI\n\nnumber.seq &lt;- seq(1, max(df$Positive), 1)\nnumber.ll95 &lt;- fit.mean - 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul95 &lt;- fit.mean + 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ll999 &lt;- fit.mean - 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul999 &lt;- fit.mean + 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq))\n\ndfCI &lt;- data.frame(number.ll95, number.ul95, number.ll999, \n                   number.ul999, number.seq, fit.mean)\n\n\n\n2.4.3 Plotting a static funnel plot\n\np &lt;- ggplot(df, aes(x = Positive, y = rate)) +\n  geom_point(aes(label=`Sub-district`), alpha=0.4) +\n  geom_line(data = dfCI, aes(x = number.seq, y = number.ll95), \n            size = 0.4, colour = \"grey40\", linetype = \"dashed\") +\n  geom_line(data = dfCI, aes(x = number.seq, y = number.ul95),\n            size = 0.4, colour = \"grey40\", linetype = \"dashed\") +\n  geom_line(data = dfCI, aes(x = number.seq, y = number.ll999), \n            size = 0.4, colour = \"grey40\") +\n  geom_line(data = dfCI, aes(x = number.seq, y = number.ul999), \n            size = 0.4, colour = \"grey40\") +\n  geom_hline(data = dfCI, aes(yintercept = fit.mean), \n             size = 0.4, colour = \"grey40\") +\n  coord_cartesian(ylim=c(0,0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") + \n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") + \n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") + \n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size=12), legend.position = c(0.91,0.85), \n        legend.title = element_text(size=7), legend.text = element_text(size=7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\np\n\n\n\n\n\n\n2.4.4 Interactive Funnel Plot: plotly + ggplot2\nThe funnel plot created using ggplot2 functions can be made interactive with ggplotly() of plotly r package.\n\nfp_ggplotly &lt;- ggplotly(p, tooltip = c(\"label\", \"x\", \"y\"))\n\nfp_ggplotly"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html",
    "title": "In-class Exercise 2",
    "section": "",
    "text": "#Getting Started ## Loading R packages"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#importing-the-data",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#importing-the-data",
    "title": "In-class Exercise 2",
    "section": "Importing the data",
    "text": "Importing the data\n\nexam_df &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#visualising-distribution",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#visualising-distribution",
    "title": "In-class Exercise 2",
    "section": "Visualising Distribution",
    "text": "Visualising Distribution\n\nHistogram\n\nggplot(exam_df, aes(x=ENGLISH))+\n  geom_histogram(bins = 20, color = \"grey10\", fill = \"lightblue\")\n\n\n\n\n\n\nThe alternative Design\n\nggplot(exam_df, aes(x=ENGLISH))+\n  geom_density(color = \"#1696d2\", adjust = 0.65, alpha = 0.6)\n\n\n\n\n\nmedian_eng &lt;- median(exam_df$ENGLISH)\nmean_eng &lt;- mean(exam_df$ENGLISH)\nstd_eng &lt;- sd(exam_df$ENGLISH)\n\nggplot(exam_df, aes(x=ENGLISH))+\n  geom_density(color = \"#1696d2\", adjust = 0.65, alpha = 0.6) +\n  geom_vline(aes(xintercept = mean_eng), colour = \"#4d5887\", linewidth = 0.6, linetype = \"dashed\")\n\n\n\n  # annotate(geom = \"text\", x = mean_eng - 8, y = 0.04 label = paste0(\"Mean ENGLISH: \", round((mean_eng),2)))"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications. In this website, you will find coursework prepared for this course."
  }
]