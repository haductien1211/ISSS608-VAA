[
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "1. Loading the needed libraries\nFor this take-home exercise 1, I will be using some of the libraries below:\ntidyverse patchwork ggrepel ggthemes hrbrthemes\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse) \n\n\nfirst_quarter &lt;- read_csv(\"data/ResidentialTransaction20240308160536.csv\")\n\nlist_of_files &lt;- list.files(path = \"data\",\n                            recursive = TRUE,\n                            pattern = \"\\\\.csv$\",\n                            full.names = TRUE)\n\nRealis &lt;- read_csv(list_of_files)\n\n\n##Realis &lt;- Realis %&gt;%\n##  parse_date_time(`Sale Date`, \"%B %d %Y\")\n\nRealis &lt;- Realis %&gt;% \n  mutate(`Sale Date FORMAT` = format(as.Date((parse_date_time(`Sale Date`, \n        orders = c(\"%d %b %Y\")))), \"%b %Y\"))\n\n##write.csv(Realis, \"data/\\\\Realis.csv\", row.names=FALSE)\ncolSums(is.na(Realis))\n\n               Project Name        Transacted Price ($) \n                          0                           0 \n                Area (SQFT)          Unit Price ($ PSF) \n                          0                           0 \n                  Sale Date                     Address \n                          0                           0 \n               Type of Sale                Type of Area \n                          0                           0 \n                 Area (SQM)          Unit Price ($ PSM) \n                          0                           0 \n              Nett Price($)               Property Type \n                          0                           0 \n            Number of Units                      Tenure \n                          0                           0 \n            Completion Date Purchaser Address Indicator \n                          0                           0 \n                Postal Code             Postal District \n                          0                           0 \n              Postal Sector             Planning Region \n                          0                           0 \n              Planning Area            Sale Date FORMAT \n                          0                           0 \n\n\n\nggplot(data = Realis, aes(x = `Unit Price ($ PSM)`)) +\n  geom_histogram(bins = 20, color = \"grey10\", fill = \"lightblue\")\n\n\n\n\n\nggplot(data = Realis, aes(x = `Property Type`)) + \n  geom_bar(color = \"grey10\", fill = \"lightblue\") + \n  theme(axis.text=element_text(size=6))\n\n\n\n\n\nggplot(data = Realis, aes(x = `Planning Region`)) +\n  geom_bar(color = \"grey10\", fill = \"lightblue\")\n\n\n\n\n\nggplot(data = Realis, aes(x = `Planning Region`, y = `Unit Price ($ PSM)`)) +\n  geom_boxplot(color = \"grey10\", fill = \"lightblue\") + \n  geom_point(stat=\"summary\", fun =\"mean\", color = \"red\")\n\n\n\n\n\nggplot(data = Realis, aes(x = `Sale Date FORMAT`)) +\n  geom_bar(color = \"grey10\", fill = \"lightblue\", inherit.aes = TRUE) +\n  scale_x_discrete(name =\"Sale Month\", \n                   limits = c(\"Jan 2023\", \"Feb 2023\", \"Mar 2023\", \n                      \"Apr 2023\",\"May 2023\",\"Jun 2023\", \n                      \"Jul 2023\", \"Aug 2023\", \"Sep 2023\",\n                      \"Oct 2023\", \"Nov 2023\", \"Dec 2023\", \n                      \"Jan 2024\", \"Feb 2024\", \"Mar 2024\"))+\n  theme(axis.text=element_text(size=6))\n\n\n\n\n\nggplot(data = Realis, aes(y = `Area (SQM)`, x = `Transacted Price ($)`)) +\n  geom_point()+\n  geom_smooth(method = glm, linewidth = 1) +\n  coord_cartesian(ylim = c(30,450), xlim=c(450000,8000000)) +\n  geom_label_repel(aes(label = `Postal Code`), fontface = \"bold\", max.overlaps = 80)\n\n\n\n\n\nggplot(data = Realis, aes(x = `Sale Date FORMAT`, y = `Unit Price ($ PSM)`)) +\n  scale_x_discrete(name =\"Sale Month\", \n                 limits = c(\"Jan 2023\", \"Feb 2023\", \"Mar 2023\", \n                    \"Apr 2023\",\"May 2023\",\"Jun 2023\", \n                    \"Jul 2023\", \"Aug 2023\", \"Sep 2023\",\n                    \"Oct 2023\", \"Nov 2023\", \"Dec 2023\", \n                    \"Jan 2024\", \"Feb 2024\", \"Mar 2024\")) +\n  \n  geom_boxplot(color = \"grey10\", fill = \"lightblue\") + \n  geom_point(stat=\"summary\", fun =\"mean\", color = \"red\") +\n  theme(axis.text=element_text(size=6))"
  }
]