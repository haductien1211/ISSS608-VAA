---
title: "Hands-on Exercise 2 Beyond ggplot2 Fundamentals"
author: "Ha Duc Tien"
date: "April 14, 2024"
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  warning: false
  freeze: true
---

# 1. Installing and loading the required libraries

```{r}
pacman::p_load(ggrepel, patchwork, 
               ggthemes, hrbrthemes,
               tidyverse) 
```

# 2. Importing data

```{r}
exam_data <- read_csv("data/Exam_data.csv")
```

# 3. Beyond ggplot2 Annotation: ggrepel

## 3.1 Working without ggrepel

::: panel-tabset
## The plot

```{r}
#| echo: false
ggplot(data = exam_data, aes(x = MATHS, y = ENGLISH)) +
  geom_point() +
  geom_smooth(method = lm, linewidth = 0.5) +
  geom_label(aes(label = ID, colour = factor(RACE)), 
             hjust = 0.5, vjust = -0.5) +
  coord_cartesian(xlim = c(0,100), ylim = c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")

```

## The code

```{r}
#| eval: false
ggplot(data = exam_data, aes(x = MATHS, y = ENGLISH)) +
  geom_point() +
  geom_smooth(method = lm, linewidth = 0.5) +
  geom_label(aes(label = ID, colour = factor(RACE)), 
             hjust = 0.5, vjust = -0.5) +
  coord_cartesian(xlim = c(0,100), ylim = c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")


```
:::

## 3.2 Working with ggrepel

### 3.2.1 Using geom_label_repel()

Simply replace geom_label() by [geom_label_repel()](https://ggrepel.slowkow.com/reference/geom_text_repel.html)

::: panel-tabset
## The plot

```{r}
#| echo: false
ggplot(data = exam_data, aes(x = MATHS, y = ENGLISH)) +
  geom_point() +
  geom_smooth(method = lm, linewidth = 0.5) +
  geom_label_repel(aes(label = ID, colour = factor(RACE)),
                   max.overlaps = 20, fontface = "bold") +
  coord_cartesian(xlim = c(0,100), ylim = c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")

```

## The code

```{r}
#| eval: false
ggplot(data = exam_data, aes(x = MATHS, y = ENGLISH)) +
  geom_point() +
  geom_smooth(method = lm, linewidth = 0.5) +
  geom_label_repel(aes(label = ID, colour = factor(RACE)),
                   max.overlaps = 20, fontface = "bold") +
  coord_cartesian(xlim = c(0,100), ylim = c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")

```
:::

### 3.2.1 Using geom_text_repel()

::: panel-tabset
## The plot

```{r}
#| echo: false
ggplot(data = exam_data, aes(x = MATHS, y = SCIENCE)) +
  geom_point() +
  geom_smooth(method = lm, linewidth = 0.5) +
  geom_text_repel(aes(label = ID, colour = factor(RACE)),
                   max.overlaps = 20, fontface = "bold") +
  coord_cartesian(xlim = c(0,100), ylim = c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")

```

## The code

```{r}
#| eval: false
ggplot(data = exam_data, aes(x = MATHS, y = SCIENCE)) +
  geom_point() +
  geom_smooth(method = lm, linewidth = 0.5) +
  geom_text_repel(aes(label = ID, colour = factor(RACE)),
                   max.overlaps = 20, fontface = "bold") +
  coord_cartesian(xlim = c(0,100), ylim = c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")

```
:::

# 4. Beyond ggplot2 Themes

ggplot2 comes with eight [built-in themes](https://ggplot2.tidyverse.org/reference/ggtheme.html), they are: theme_gray(), theme_bw(), theme_classic(), theme_dark(), theme_light(), theme_linedraw(), theme_minimal(), and theme_void()

::: panel-tabset
## The plot

```{r}
#| echo: false
ggplot(data = exam_data, aes(x= MATHS))+
  geom_histogram(bins = 20, boundary = 100, color = "grey10", fill = "grey90") +
  theme_bw() +
  ggtitle("Distribution of Maths scores")
```

## The code

```{r}
#| eval: false
ggplot(data = exam_data, aes(x= MATHS))+
  geom_histogram(bins = 20, boundary = 100, color = "grey10", fill = "grey90") +
  theme_bw() +
  ggtitle("Distribution of Maths scores")
```
:::

## 4.1 Working with ggtheme package

[**ggthemes**](https://cran.r-project.org/web/packages/ggthemes/) provides [‘ggplot2’ themes](https://yutannihilation.github.io/allYourFigureAreBelongToUs/ggthemes/) that replicate the look of plots by Edward Tufte, Stephen Few, [Fivethirtyeight](https://abcnews.go.com/538), [The Economist](https://www.economist.com/graphic-detail), ‘Stata’, ‘Excel’, and [The Wall Street Journal](https://www.pinterest.com/wsjgraphics/wsj-graphics/), among others.

### 4.1.1 The economist theme

::: panel-tabset
## The plot

```{r}
#| echo: false
ggplot(data = exam_data, aes(x= MATHS))+
  geom_histogram(bins = 20, boundary = 100, color = "grey10", fill = "grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_economist()
```

## The code

```{r}
#| eval: false
ggplot(data = exam_data, aes(x= MATHS))+
  geom_histogram(bins = 20, boundary = 100, color = "grey10", fill = "grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_economist()
```
:::

### 4.1.2 The WSJ theme

::: panel-tabset
## The plot

```{r}
#| echo: false
ggplot(data = exam_data, aes(x= ENGLISH))+
  geom_histogram(bins = 20, boundary = 100, color = "grey10", fill = "grey90") +
  ggtitle("Distribution of English scores") +
  theme_wsj(base_size = 8)
```

## The code

```{r}
#| eval: false
ggplot(data = exam_data, aes(x= ENGLISH))+
  geom_histogram(bins = 20, boundary = 100, color = "grey10", fill = "grey90") +
  ggtitle("Distribution of English scores") +
  theme_wsj(base_size = 8)
```
:::

### 4.1.3 The fivethirtyeight theme

::: panel-tabset
## The plot

```{r}
#| echo: false
ggplot(data = exam_data, aes(x= SCIENCE))+
  geom_histogram(bins = 20, boundary = 100, color = "grey10", fill = "grey90") +
  ggtitle("Distribution of Science scores") +
  theme_fivethirtyeight()
```

## The code

```{r}
#| eval: false
ggplot(data = exam_data, aes(x= SCIENCE))+
  geom_histogram(bins = 20, boundary = 100, color = "grey10", fill = "grey90") +
  ggtitle("Distribution of Science scores") +
  theme_fivethirtyeight()
```
:::

## 4.2 Working with hrbthems package

[hrbrthemes](https://cinc.rud.is/web/packages/hrbrthemes/) package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.

::: panel-tabset
## The plot

```{r}
#| echo: false
ggplot(data = exam_data, aes(x = MATHS)) +
  geom_histogram(bins = 20, boundary = 100, color = "grey10", fill = "grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_ipsum()
```

## The code

```{r}
#| eval: false
ggplot(data = exam_data, aes(x = MATHS)) +
  geom_histogram(bins = 20, boundary = 100, color = "grey10", fill = "grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_ipsum()
```
:::

Using the elements of hrbrthemes

::: panel-tabset
## The plot

```{r}
#| echo: false
ggplot(data = exam_data, aes(x = MATHS)) +
  geom_histogram(bins = 20, boundary = 100, color = "grey10", fill = "grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_ipsum(axis_title_size = 18, base_size = 15, grid = "Y")
```

## The code

```{r}
#| eval: false
ggplot(data = exam_data, aes(x = MATHS)) +
  geom_histogram(bins = 20, boundary = 100, color = "grey10", fill = "grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_ipsum(axis_title_size = 18, base_size = 15, grid = "Y")
```
:::

# 5. Beyond Single Graph

In this section, I will create composite plot by combining multiple graphs

p1 distribution of Math score plot

::: panel-tabset
## The plot

```{r}
#| echo: false
ggplot(data = exam_data, aes(x = MATHS)) +
  geom_histogram(bins = 20, boundary = 100, color = "grey10", fill = "grey90") +
  coord_cartesian(xlim = c(0,100)) +
  ggtitle("Distribution of Maths scores")
```

## The code

```{r}
p1 <- ggplot(data = exam_data, aes(x = MATHS)) +
        geom_histogram(bins = 20, boundary = 100, color = "grey10", fill = "grey90") +
        coord_cartesian(xlim = c(0,100)) +
        ggtitle("Distribution of Maths scores")
```
:::

p2 distribution of English score plot

::: panel-tabset
## The plot

```{r}
#| echo: false
ggplot(data = exam_data, aes(x = ENGLISH)) +
  geom_histogram(bins = 20, boundary = 100, color = "grey10", fill = "grey90") +
  coord_cartesian(xlim = c(0,100)) +
  ggtitle("Distribution of English scores")
```

## The code

```{r}
p2 <- ggplot(data = exam_data, aes(x = ENGLISH)) +
        geom_histogram(bins = 20, boundary = 100, color = "grey10", fill = "grey90") +
        coord_cartesian(xlim = c(0,100)) +
        ggtitle("Distribution of English scores")
```
:::

p3 distribution of Science score plot

::: panel-tabset
## The plot

```{r}
#| echo: false
ggplot(data = exam_data, aes(x = SCIENCE)) +
  geom_histogram(bins = 20, boundary = 100, color = "grey10", fill = "grey90") +
  coord_cartesian(xlim = c(0,100)) +
  ggtitle("Distribution of English scores")
```

## The code

```{r}
p3 <- ggplot(data = exam_data, aes(x = ENGLISH)) +
        geom_histogram(bins = 20, boundary = 100, color = "grey10", fill = "grey90") +
        coord_cartesian(xlim = c(0,100)) +
        ggtitle("Distribution of English scores")
```
:::

p4 a scatterplot for English score versus Maths score

::: panel-tabset
## The plot

```{r}
#| echo: false
ggplot(data = exam_data, aes(x = MATHS, y = ENGLISH)) +
  geom_point()+
  geom_smooth(method = lm, linewidth = 0.5) +
  coord_cartesian(xlim = c(0,100), ylim = c(0,100)) +
  ggtitle("English scores vs Maths scores for primary 3")
```

## The code

```{r}
p4 <- ggplot(data = exam_data, aes(x = MATHS, y = ENGLISH)) +
      geom_point()+
      geom_smooth(method = lm, linewidth = 0.5) +
      coord_cartesian(xlim = c(0,100), ylim = c(0,100)) +
      ggtitle("English scores vs Maths scores for primary 3")
```
:::

## 5.1 Creating Composite Graphics: patchwork methods

[Patchwork](https://patchwork.data-imaginist.com/) package has a very simple syntax where we can create layouts:

-   Two-Column Layout using the Plus Sign +.
-   Parenthesis () to create a subplot group.
-   Two-Row Layout using the Division Sign /

## 5.2 Combining two ggplot2 graphs

::: panel-tabset
## The plot

```{r}
#| echo: false
p1 + p2
```

## The code

```{r}
#| eval: false
p1 + p2
```
:::

## 5.3 Combining three ggplot2 graphs

-   “\|” operator to stack two ggplot2 graphs,
-   “/” operator to place the plots beside each other,
-   “()” operator the define the sequence of the plotting.

::: panel-tabset
## The plot

```{r}
#| echo: false
((p1 / p2) | p4) &
  theme(plot.title = element_text(size = 8))
```

## The code

```{r}
#| eval: false
((p1 / p2) | p4) &
  theme(plot.title = element_text(size = 8))
```
:::

## 5.4 Creating a composite figure with tag

Use **patchwork** for auto-tagging capabilities

::: panel-tabset
## The plot

```{r}
#| echo: false
((p1 / p2) | p4) +
  plot_annotation(tag_levels = '1') & 
  theme(plot.title = element_text(size = 8))
```

## The code

```{r}
#| eval: false
((p1 / p2) | p4) +
  plot_annotation(tag_levels = '1') &
  theme(plot.title = element_text(size = 8))
```
:::

## 5.5 Creating figure with insert

With [inset_element()](https://patchwork.data-imaginist.com/reference/inset_element.html) of patchwork, we can place one or several plots or graphic elements freely on top or below another plot.

::: panel-tabset
## The plot

```{r}
#| echo: false
p4 + inset_element(p2, left = 0.02, right = 0.5, top = 1, bottom = 0.7)
```

## The code

```{r}
#| eval: false

p4 + inset_element(p2, left = 0.02, right = 0.5, top = 1, bottom = 0.7)
```
:::

## 5.6 Creating a composite figure by using patchwork and ggtheme

Figure below is created by combining **patchwork** and **theme_economist()** of **ggthemes** package

::: panel-tabset
## The plot

```{r}
#| echo: false
((p1 / p2) | p4) & theme_economist(base_size = 5) &
  theme(plot.title = element_text(size = 8))
```

## The code

```{r}
patchwork <- (p1 / p2) | p4
patchwork & theme_economist() & 
  theme(plot.title = element_text(size = 8))
```
:::
